"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@mapbox";
exports.ids = ["vendor-chunks/@mapbox"];
exports.modules = {

/***/ "(ssr)/./node_modules/@mapbox/fusspot/lib/index.js":
/*!***************************************************!*\
  !*** ./node_modules/@mapbox/fusspot/lib/index.js ***!
  \***************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n/**\n * Validators are functions which assert certain type.\n * They can return a string which can then be used\n * to display a helpful error message.\n * They can also return a function for a custom error message.\n */\nvar isPlainObject = __webpack_require__(/*! is-plain-obj */ \"(ssr)/./node_modules/is-plain-obj/index.js\");\nvar xtend = __webpack_require__(/*! xtend */ \"(ssr)/./node_modules/xtend/immutable.js\");\n\nvar DEFAULT_ERROR_PATH = 'value';\nvar NEWLINE_INDENT = '\\n  ';\n\nvar v = {};\n\n/**\n * Runners\n *\n * Take root validators and run assertion\n */\nv.assert = function(rootValidator, options) {\n  options = options || {};\n  return function(value) {\n    var message = validate(rootValidator, value);\n    // all good\n    if (!message) {\n      return;\n    }\n\n    var errorMessage = processMessage(message, options);\n\n    if (options.apiName) {\n      errorMessage = options.apiName + ': ' + errorMessage;\n    }\n\n    throw new Error(errorMessage);\n  };\n};\n\n/**\n * Higher Order Validators\n *\n * validators which take other validators as input\n * and output a new validator\n */\nv.shape = function shape(validatorObj) {\n  var validators = objectEntries(validatorObj);\n  return function shapeValidator(value) {\n    var validationResult = validate(v.plainObject, value);\n\n    if (validationResult) {\n      return validationResult;\n    }\n\n    var key, validator;\n    var errorMessages = [];\n\n    for (var i = 0; i < validators.length; i++) {\n      key = validators[i].key;\n      validator = validators[i].value;\n      validationResult = validate(validator, value[key]);\n\n      if (validationResult) {\n        // return [key].concat(validationResult);\n        errorMessages.push([key].concat(validationResult));\n      }\n    }\n\n    if (errorMessages.length < 2) {\n      return errorMessages[0];\n    }\n\n    // enumerate all the error messages\n    return function(options) {\n      errorMessages = errorMessages.map(function(message) {\n        var key = message[0];\n        var renderedMessage = processMessage(message, options)\n          .split('\\n')\n          .join(NEWLINE_INDENT); // indents any inner nesting\n        return '- ' + key + ': ' + renderedMessage;\n      });\n\n      var objectId = options.path.join('.');\n      var ofPhrase = objectId === DEFAULT_ERROR_PATH ? '' : ' of ' + objectId;\n\n      return (\n        'The following properties' +\n        ofPhrase +\n        ' have invalid values:' +\n        NEWLINE_INDENT +\n        errorMessages.join(NEWLINE_INDENT)\n      );\n    };\n  };\n};\n\nv.strictShape = function strictShape(validatorObj) {\n  var shapeValidator = v.shape(validatorObj);\n  return function strictShapeValidator(value) {\n    var shapeResult = shapeValidator(value);\n    if (shapeResult) {\n      return shapeResult;\n    }\n\n    var invalidKeys = Object.keys(value).reduce(function(memo, valueKey) {\n      if (validatorObj[valueKey] === undefined) {\n        memo.push(valueKey);\n      }\n      return memo;\n    }, []);\n\n    if (invalidKeys.length !== 0) {\n      return function() {\n        return 'The following keys are invalid: ' + invalidKeys.join(', ');\n      };\n    }\n  };\n};\n\nv.arrayOf = function arrayOf(validator) {\n  return createArrayValidator(validator);\n};\n\nv.tuple = function tuple() {\n  var validators = Array.isArray(arguments[0])\n    ? arguments[0]\n    : Array.prototype.slice.call(arguments);\n  return createArrayValidator(validators);\n};\n\n// Currently array validation fails when the first invalid item is found.\nfunction createArrayValidator(validators) {\n  var validatingTuple = Array.isArray(validators);\n  var getValidator = function(index) {\n    if (validatingTuple) {\n      return validators[index];\n    }\n    return validators;\n  };\n\n  return function arrayValidator(value) {\n    var validationResult = validate(v.plainArray, value);\n    if (validationResult) {\n      return validationResult;\n    }\n\n    if (validatingTuple && value.length !== validators.length) {\n      return 'an array with ' + validators.length + ' items';\n    }\n\n    for (var i = 0; i < value.length; i++) {\n      validationResult = validate(getValidator(i), value[i]);\n      if (validationResult) {\n        return [i].concat(validationResult);\n      }\n    }\n  };\n}\n\nv.required = function required(validator) {\n  function requiredValidator(value) {\n    if (value == null) {\n      return function(options) {\n        return formatErrorMessage(\n          options,\n          isArrayCulprit(options.path)\n            ? 'cannot be undefined/null.'\n            : 'is required.'\n        );\n      };\n    }\n    return validator.apply(this, arguments);\n  }\n  requiredValidator.__required = true;\n\n  return requiredValidator;\n};\n\nv.oneOfType = function oneOfType() {\n  var validators = Array.isArray(arguments[0])\n    ? arguments[0]\n    : Array.prototype.slice.call(arguments);\n  return function oneOfTypeValidator(value) {\n    var messages = validators\n      .map(function(validator) {\n        return validate(validator, value);\n      })\n      .filter(Boolean);\n\n    // If we don't have as many messages as no. of validators,\n    // then at least one validator was ok with the value.\n    if (messages.length !== validators.length) {\n      return;\n    }\n\n    // check primitive type\n    if (\n      messages.every(function(message) {\n        return message.length === 1 && typeof message[0] === 'string';\n      })\n    ) {\n      return orList(\n        messages.map(function(m) {\n          return m[0];\n        })\n      );\n    }\n\n    // Complex oneOfTypes like\n    // `v.oneOftypes(v.shape({name: v.string})`, `v.shape({name: v.number}))`\n    // are complex ¯\\_(ツ)_/¯. For the current scope only returning the longest message.\n    return messages.reduce(function(max, arr) {\n      return arr.length > max.length ? arr : max;\n    });\n  };\n};\n\n/**\n * Meta Validators\n * which take options as argument (not validators)\n * and return a new primitive validator\n */\nv.equal = function equal(compareWith) {\n  return function equalValidator(value) {\n    if (value !== compareWith) {\n      return JSON.stringify(compareWith);\n    }\n  };\n};\n\nv.oneOf = function oneOf() {\n  var options = Array.isArray(arguments[0])\n    ? arguments[0]\n    : Array.prototype.slice.call(arguments);\n  var validators = options.map(function(value) {\n    return v.equal(value);\n  });\n\n  return v.oneOfType.apply(this, validators);\n};\n\nv.range = function range(compareWith) {\n  var min = compareWith[0];\n  var max = compareWith[1];\n  return function rangeValidator(value) {\n    var validationResult = validate(v.number, value);\n\n    if (validationResult || value < min || value > max) {\n      return 'number between ' + min + ' & ' + max + ' (inclusive)';\n    }\n  };\n};\n\n/**\n * Primitive validators\n *\n * simple validators which return a string or undefined\n */\nv.any = function any() {\n  return;\n};\n\nv.boolean = function boolean(value) {\n  if (typeof value !== 'boolean') {\n    return 'boolean';\n  }\n};\n\nv.number = function number(value) {\n  if (typeof value !== 'number') {\n    return 'number';\n  }\n};\n\nv.plainArray = function plainArray(value) {\n  if (!Array.isArray(value)) {\n    return 'array';\n  }\n};\n\nv.plainObject = function plainObject(value) {\n  if (!isPlainObject(value)) {\n    return 'object';\n  }\n};\n\nv.string = function string(value) {\n  if (typeof value !== 'string') {\n    return 'string';\n  }\n};\n\nv.func = function func(value) {\n  if (typeof value !== 'function') {\n    return 'function';\n  }\n};\n\nfunction validate(validator, value) {\n  // assertions are optional by default unless wrapped in v.require\n  if (value == null && !validator.hasOwnProperty('__required')) {\n    return;\n  }\n\n  var result = validator(value);\n\n  if (result) {\n    return Array.isArray(result) ? result : [result];\n  }\n}\n\nfunction processMessage(message, options) {\n  // message array follows the convention\n  // [...path, result]\n  // path is an array of object keys / array indices\n  // result is output of the validator\n  var len = message.length;\n\n  var result = message[len - 1];\n  var path = message.slice(0, len - 1);\n\n  if (path.length === 0) {\n    path = [DEFAULT_ERROR_PATH];\n  }\n  options = xtend(options, { path: path });\n\n  return typeof result === 'function'\n    ? result(options) // allows customization of result\n    : formatErrorMessage(options, prettifyResult(result));\n}\n\nfunction orList(list) {\n  if (list.length < 2) {\n    return list[0];\n  }\n  if (list.length === 2) {\n    return list.join(' or ');\n  }\n  return list.slice(0, -1).join(', ') + ', or ' + list.slice(-1);\n}\n\nfunction prettifyResult(result) {\n  return 'must be ' + addArticle(result) + '.';\n}\n\nfunction addArticle(nounPhrase) {\n  if (/^an? /.test(nounPhrase)) {\n    return nounPhrase;\n  }\n  if (/^[aeiou]/i.test(nounPhrase)) {\n    return 'an ' + nounPhrase;\n  }\n  if (/^[a-z]/i.test(nounPhrase)) {\n    return 'a ' + nounPhrase;\n  }\n  return nounPhrase;\n}\n\nfunction formatErrorMessage(options, prettyResult) {\n  var arrayCulprit = isArrayCulprit(options.path);\n  var output = options.path.join('.') + ' ' + prettyResult;\n  var prepend = arrayCulprit ? 'Item at position ' : '';\n\n  return prepend + output;\n}\n\nfunction isArrayCulprit(path) {\n  return typeof path[path.length - 1] == 'number' || typeof path[0] == 'number';\n}\n\nfunction objectEntries(obj) {\n  return Object.keys(obj || {}).map(function(key) {\n    return { key: key, value: obj[key] };\n  });\n}\n\nv.validate = validate;\nv.processMessage = processMessage;\n\nmodule.exports = v;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@mapbox/fusspot/lib/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@mapbox/mapbox-sdk/index.js":
/*!**************************************************!*\
  !*** ./node_modules/@mapbox/mapbox-sdk/index.js ***!
  \**************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n\nvar client = __webpack_require__(/*! ./lib/client */ \"(ssr)/./node_modules/@mapbox/mapbox-sdk/lib/client.js\");\n\nmodule.exports = client;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG1hcGJveC9tYXBib3gtc2RrL2luZGV4LmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViLGFBQWEsbUJBQU8sQ0FBQywyRUFBYzs7QUFFbkMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly90cmFpbi1mcm9udGVuZC1jdy8uL25vZGVfbW9kdWxlcy9AbWFwYm94L21hcGJveC1zZGsvaW5kZXguanM/MDQ5MyJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbnZhciBjbGllbnQgPSByZXF1aXJlKCcuL2xpYi9jbGllbnQnKTtcblxubW9kdWxlLmV4cG9ydHMgPSBjbGllbnQ7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@mapbox/mapbox-sdk/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@mapbox/mapbox-sdk/lib/classes/mapi-client.js":
/*!********************************************************************!*\
  !*** ./node_modules/@mapbox/mapbox-sdk/lib/classes/mapi-client.js ***!
  \********************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n\nvar parseToken = __webpack_require__(/*! @mapbox/parse-mapbox-token */ \"(ssr)/./node_modules/@mapbox/parse-mapbox-token/index.js\");\nvar MapiRequest = __webpack_require__(/*! ./mapi-request */ \"(ssr)/./node_modules/@mapbox/mapbox-sdk/lib/classes/mapi-request.js\");\nvar constants = __webpack_require__(/*! ../constants */ \"(ssr)/./node_modules/@mapbox/mapbox-sdk/lib/constants.js\");\n\n/**\n * A low-level Mapbox API client. Use it to create service clients\n * that share the same configuration.\n *\n * Services and `MapiRequest`s use the underlying `MapiClient` to\n * determine how to create, send, and abort requests in a way\n * that is appropriate to the configuration and environment\n * (Node or the browser).\n *\n * @class MapiClient\n * @property {string} accessToken - The Mapbox access token assigned\n *   to this client.\n * @property {string} [origin] - The origin\n *   to use for API requests. Defaults to https://api.mapbox.com.\n */\n\nfunction MapiClient(options) {\n  if (!options || !options.accessToken) {\n    throw new Error('Cannot create a client without an access token');\n  }\n  // Try parsing the access token to determine right away if it's valid.\n  parseToken(options.accessToken);\n\n  this.accessToken = options.accessToken;\n  this.origin = options.origin || constants.API_ORIGIN;\n}\n\nMapiClient.prototype.createRequest = function createRequest(requestOptions) {\n  return new MapiRequest(this, requestOptions);\n};\n\nmodule.exports = MapiClient;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG1hcGJveC9tYXBib3gtc2RrL2xpYi9jbGFzc2VzL21hcGktY2xpZW50LmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViLGlCQUFpQixtQkFBTyxDQUFDLDRGQUE0QjtBQUNyRCxrQkFBa0IsbUJBQU8sQ0FBQywyRkFBZ0I7QUFDMUMsZ0JBQWdCLG1CQUFPLENBQUMsOEVBQWM7O0FBRXRDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsY0FBYyxRQUFRO0FBQ3RCO0FBQ0EsY0FBYyxRQUFRO0FBQ3RCO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly90cmFpbi1mcm9udGVuZC1jdy8uL25vZGVfbW9kdWxlcy9AbWFwYm94L21hcGJveC1zZGsvbGliL2NsYXNzZXMvbWFwaS1jbGllbnQuanM/N2YwNSJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbnZhciBwYXJzZVRva2VuID0gcmVxdWlyZSgnQG1hcGJveC9wYXJzZS1tYXBib3gtdG9rZW4nKTtcbnZhciBNYXBpUmVxdWVzdCA9IHJlcXVpcmUoJy4vbWFwaS1yZXF1ZXN0Jyk7XG52YXIgY29uc3RhbnRzID0gcmVxdWlyZSgnLi4vY29uc3RhbnRzJyk7XG5cbi8qKlxuICogQSBsb3ctbGV2ZWwgTWFwYm94IEFQSSBjbGllbnQuIFVzZSBpdCB0byBjcmVhdGUgc2VydmljZSBjbGllbnRzXG4gKiB0aGF0IHNoYXJlIHRoZSBzYW1lIGNvbmZpZ3VyYXRpb24uXG4gKlxuICogU2VydmljZXMgYW5kIGBNYXBpUmVxdWVzdGBzIHVzZSB0aGUgdW5kZXJseWluZyBgTWFwaUNsaWVudGAgdG9cbiAqIGRldGVybWluZSBob3cgdG8gY3JlYXRlLCBzZW5kLCBhbmQgYWJvcnQgcmVxdWVzdHMgaW4gYSB3YXlcbiAqIHRoYXQgaXMgYXBwcm9wcmlhdGUgdG8gdGhlIGNvbmZpZ3VyYXRpb24gYW5kIGVudmlyb25tZW50XG4gKiAoTm9kZSBvciB0aGUgYnJvd3NlcikuXG4gKlxuICogQGNsYXNzIE1hcGlDbGllbnRcbiAqIEBwcm9wZXJ0eSB7c3RyaW5nfSBhY2Nlc3NUb2tlbiAtIFRoZSBNYXBib3ggYWNjZXNzIHRva2VuIGFzc2lnbmVkXG4gKiAgIHRvIHRoaXMgY2xpZW50LlxuICogQHByb3BlcnR5IHtzdHJpbmd9IFtvcmlnaW5dIC0gVGhlIG9yaWdpblxuICogICB0byB1c2UgZm9yIEFQSSByZXF1ZXN0cy4gRGVmYXVsdHMgdG8gaHR0cHM6Ly9hcGkubWFwYm94LmNvbS5cbiAqL1xuXG5mdW5jdGlvbiBNYXBpQ2xpZW50KG9wdGlvbnMpIHtcbiAgaWYgKCFvcHRpb25zIHx8ICFvcHRpb25zLmFjY2Vzc1Rva2VuKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKCdDYW5ub3QgY3JlYXRlIGEgY2xpZW50IHdpdGhvdXQgYW4gYWNjZXNzIHRva2VuJyk7XG4gIH1cbiAgLy8gVHJ5IHBhcnNpbmcgdGhlIGFjY2VzcyB0b2tlbiB0byBkZXRlcm1pbmUgcmlnaHQgYXdheSBpZiBpdCdzIHZhbGlkLlxuICBwYXJzZVRva2VuKG9wdGlvbnMuYWNjZXNzVG9rZW4pO1xuXG4gIHRoaXMuYWNjZXNzVG9rZW4gPSBvcHRpb25zLmFjY2Vzc1Rva2VuO1xuICB0aGlzLm9yaWdpbiA9IG9wdGlvbnMub3JpZ2luIHx8IGNvbnN0YW50cy5BUElfT1JJR0lOO1xufVxuXG5NYXBpQ2xpZW50LnByb3RvdHlwZS5jcmVhdGVSZXF1ZXN0ID0gZnVuY3Rpb24gY3JlYXRlUmVxdWVzdChyZXF1ZXN0T3B0aW9ucykge1xuICByZXR1cm4gbmV3IE1hcGlSZXF1ZXN0KHRoaXMsIHJlcXVlc3RPcHRpb25zKTtcbn07XG5cbm1vZHVsZS5leHBvcnRzID0gTWFwaUNsaWVudDtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@mapbox/mapbox-sdk/lib/classes/mapi-client.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@mapbox/mapbox-sdk/lib/classes/mapi-error.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@mapbox/mapbox-sdk/lib/classes/mapi-error.js ***!
  \*******************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n\nvar constants = __webpack_require__(/*! ../constants */ \"(ssr)/./node_modules/@mapbox/mapbox-sdk/lib/constants.js\");\n\n/**\n * A Mapbox API error.\n *\n * If there's an error during the API transaction,\n * the Promise returned by `MapiRequest`'s [`send`](#send)\n * method should reject with a `MapiError`.\n *\n * @class MapiError\n * @hideconstructor\n * @property {MapiRequest} request - The errored request.\n * @property {string} type - The type of error. Usually this is `'HttpError'`.\n *   If the request was aborted, so the error was\n *   not sent from the server, the type will be\n *   `'RequestAbortedError'`.\n * @property {number} [statusCode] - The numeric status code of\n *   the HTTP response.\n * @property {Object | string} [body] - If the server sent a response body,\n *   this property exposes that response, parsed as JSON if possible.\n * @property {string} [message] - Whatever message could be derived from the\n *   call site and HTTP response.\n *\n * @param {MapiRequest} options.request\n * @param {number} [options.statusCode]\n * @param {string} [options.body]\n * @param {string} [options.message]\n * @param {string} [options.type]\n */\nfunction MapiError(options) {\n  var errorType = options.type || constants.ERROR_HTTP;\n\n  var body;\n  if (options.body) {\n    try {\n      body = JSON.parse(options.body);\n    } catch (e) {\n      body = options.body;\n    }\n  } else {\n    body = null;\n  }\n\n  var message = options.message || null;\n  if (!message) {\n    if (typeof body === 'string') {\n      message = body;\n    } else if (body && typeof body.message === 'string') {\n      message = body.message;\n    } else if (errorType === constants.ERROR_REQUEST_ABORTED) {\n      message = 'Request aborted';\n    }\n  }\n\n  this.message = message;\n  this.type = errorType;\n  this.statusCode = options.statusCode || null;\n  this.request = options.request;\n  this.body = body;\n}\n\nmodule.exports = MapiError;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG1hcGJveC9tYXBib3gtc2RrL2xpYi9jbGFzc2VzL21hcGktZXJyb3IuanMiLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWIsZ0JBQWdCLG1CQUFPLENBQUMsOEVBQWM7O0FBRXRDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGNBQWMsYUFBYTtBQUMzQixjQUFjLFFBQVE7QUFDdEI7QUFDQTtBQUNBO0FBQ0EsY0FBYyxRQUFRO0FBQ3RCO0FBQ0EsY0FBYyxpQkFBaUI7QUFDL0I7QUFDQSxjQUFjLFFBQVE7QUFDdEI7QUFDQTtBQUNBLFdBQVcsYUFBYTtBQUN4QixXQUFXLFFBQVE7QUFDbkIsV0FBVyxRQUFRO0FBQ25CLFdBQVcsUUFBUTtBQUNuQixXQUFXLFFBQVE7QUFDbkI7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsTUFBTTtBQUNOO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdHJhaW4tZnJvbnRlbmQtY3cvLi9ub2RlX21vZHVsZXMvQG1hcGJveC9tYXBib3gtc2RrL2xpYi9jbGFzc2VzL21hcGktZXJyb3IuanM/MDJhMSJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbnZhciBjb25zdGFudHMgPSByZXF1aXJlKCcuLi9jb25zdGFudHMnKTtcblxuLyoqXG4gKiBBIE1hcGJveCBBUEkgZXJyb3IuXG4gKlxuICogSWYgdGhlcmUncyBhbiBlcnJvciBkdXJpbmcgdGhlIEFQSSB0cmFuc2FjdGlvbixcbiAqIHRoZSBQcm9taXNlIHJldHVybmVkIGJ5IGBNYXBpUmVxdWVzdGAncyBbYHNlbmRgXSgjc2VuZClcbiAqIG1ldGhvZCBzaG91bGQgcmVqZWN0IHdpdGggYSBgTWFwaUVycm9yYC5cbiAqXG4gKiBAY2xhc3MgTWFwaUVycm9yXG4gKiBAaGlkZWNvbnN0cnVjdG9yXG4gKiBAcHJvcGVydHkge01hcGlSZXF1ZXN0fSByZXF1ZXN0IC0gVGhlIGVycm9yZWQgcmVxdWVzdC5cbiAqIEBwcm9wZXJ0eSB7c3RyaW5nfSB0eXBlIC0gVGhlIHR5cGUgb2YgZXJyb3IuIFVzdWFsbHkgdGhpcyBpcyBgJ0h0dHBFcnJvcidgLlxuICogICBJZiB0aGUgcmVxdWVzdCB3YXMgYWJvcnRlZCwgc28gdGhlIGVycm9yIHdhc1xuICogICBub3Qgc2VudCBmcm9tIHRoZSBzZXJ2ZXIsIHRoZSB0eXBlIHdpbGwgYmVcbiAqICAgYCdSZXF1ZXN0QWJvcnRlZEVycm9yJ2AuXG4gKiBAcHJvcGVydHkge251bWJlcn0gW3N0YXR1c0NvZGVdIC0gVGhlIG51bWVyaWMgc3RhdHVzIGNvZGUgb2ZcbiAqICAgdGhlIEhUVFAgcmVzcG9uc2UuXG4gKiBAcHJvcGVydHkge09iamVjdCB8IHN0cmluZ30gW2JvZHldIC0gSWYgdGhlIHNlcnZlciBzZW50IGEgcmVzcG9uc2UgYm9keSxcbiAqICAgdGhpcyBwcm9wZXJ0eSBleHBvc2VzIHRoYXQgcmVzcG9uc2UsIHBhcnNlZCBhcyBKU09OIGlmIHBvc3NpYmxlLlxuICogQHByb3BlcnR5IHtzdHJpbmd9IFttZXNzYWdlXSAtIFdoYXRldmVyIG1lc3NhZ2UgY291bGQgYmUgZGVyaXZlZCBmcm9tIHRoZVxuICogICBjYWxsIHNpdGUgYW5kIEhUVFAgcmVzcG9uc2UuXG4gKlxuICogQHBhcmFtIHtNYXBpUmVxdWVzdH0gb3B0aW9ucy5yZXF1ZXN0XG4gKiBAcGFyYW0ge251bWJlcn0gW29wdGlvbnMuc3RhdHVzQ29kZV1cbiAqIEBwYXJhbSB7c3RyaW5nfSBbb3B0aW9ucy5ib2R5XVxuICogQHBhcmFtIHtzdHJpbmd9IFtvcHRpb25zLm1lc3NhZ2VdXG4gKiBAcGFyYW0ge3N0cmluZ30gW29wdGlvbnMudHlwZV1cbiAqL1xuZnVuY3Rpb24gTWFwaUVycm9yKG9wdGlvbnMpIHtcbiAgdmFyIGVycm9yVHlwZSA9IG9wdGlvbnMudHlwZSB8fCBjb25zdGFudHMuRVJST1JfSFRUUDtcblxuICB2YXIgYm9keTtcbiAgaWYgKG9wdGlvbnMuYm9keSkge1xuICAgIHRyeSB7XG4gICAgICBib2R5ID0gSlNPTi5wYXJzZShvcHRpb25zLmJvZHkpO1xuICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgIGJvZHkgPSBvcHRpb25zLmJvZHk7XG4gICAgfVxuICB9IGVsc2Uge1xuICAgIGJvZHkgPSBudWxsO1xuICB9XG5cbiAgdmFyIG1lc3NhZ2UgPSBvcHRpb25zLm1lc3NhZ2UgfHwgbnVsbDtcbiAgaWYgKCFtZXNzYWdlKSB7XG4gICAgaWYgKHR5cGVvZiBib2R5ID09PSAnc3RyaW5nJykge1xuICAgICAgbWVzc2FnZSA9IGJvZHk7XG4gICAgfSBlbHNlIGlmIChib2R5ICYmIHR5cGVvZiBib2R5Lm1lc3NhZ2UgPT09ICdzdHJpbmcnKSB7XG4gICAgICBtZXNzYWdlID0gYm9keS5tZXNzYWdlO1xuICAgIH0gZWxzZSBpZiAoZXJyb3JUeXBlID09PSBjb25zdGFudHMuRVJST1JfUkVRVUVTVF9BQk9SVEVEKSB7XG4gICAgICBtZXNzYWdlID0gJ1JlcXVlc3QgYWJvcnRlZCc7XG4gICAgfVxuICB9XG5cbiAgdGhpcy5tZXNzYWdlID0gbWVzc2FnZTtcbiAgdGhpcy50eXBlID0gZXJyb3JUeXBlO1xuICB0aGlzLnN0YXR1c0NvZGUgPSBvcHRpb25zLnN0YXR1c0NvZGUgfHwgbnVsbDtcbiAgdGhpcy5yZXF1ZXN0ID0gb3B0aW9ucy5yZXF1ZXN0O1xuICB0aGlzLmJvZHkgPSBib2R5O1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IE1hcGlFcnJvcjtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@mapbox/mapbox-sdk/lib/classes/mapi-error.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@mapbox/mapbox-sdk/lib/classes/mapi-request.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@mapbox/mapbox-sdk/lib/classes/mapi-request.js ***!
  \*********************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n\nvar parseToken = __webpack_require__(/*! @mapbox/parse-mapbox-token */ \"(ssr)/./node_modules/@mapbox/parse-mapbox-token/index.js\");\nvar xtend = __webpack_require__(/*! xtend */ \"(ssr)/./node_modules/xtend/immutable.js\");\nvar EventEmitter = __webpack_require__(/*! eventemitter3 */ \"(ssr)/./node_modules/eventemitter3/index.js\");\nvar urlUtils = __webpack_require__(/*! ../helpers/url-utils */ \"(ssr)/./node_modules/@mapbox/mapbox-sdk/lib/helpers/url-utils.js\");\nvar constants = __webpack_require__(/*! ../constants */ \"(ssr)/./node_modules/@mapbox/mapbox-sdk/lib/constants.js\");\n\nvar requestId = 1;\n\n/**\n * A Mapbox API request.\n *\n * Note that creating a `MapiRequest` does *not* send the request automatically.\n * Use the request's `send` method to send it off and get a `Promise`.\n *\n * The `emitter` property is an `EventEmitter` that emits the following events:\n *\n * - `'response'` - Listeners will be called with a `MapiResponse`.\n * - `'error'` - Listeners will be called with a `MapiError`.\n * - `'downloadProgress'` - Listeners will be called with `ProgressEvents`.\n * - `'uploadProgress'` - Listeners will be called with `ProgressEvents`.\n *   Upload events are only available when the request includes a file.\n *\n * @class MapiRequest\n * @property {EventEmitter} emitter - An event emitter. See above.\n * @property {MapiClient} client - This request's `MapiClient`.\n * @property {MapiResponse|null} response - If this request has been sent and received\n *   a response, the response is available on this property.\n * @property {MapiError|Error|null} error - If this request has been sent and\n *   received an error in response, the error is available on this property.\n * @property {boolean} aborted - If the request has been aborted\n *   (via [`abort`](#abort)), this property will be `true`.\n * @property {boolean} sent - If the request has been sent, this property will\n *   be `true`. You cannot send the same request twice, so if you need to create\n *   a new request that is the equivalent of an existing one, use\n *   [`clone`](#clone).\n * @property {string} path - The request's path, including colon-prefixed route\n *   parameters.\n * @property {string} origin - The request's origin.\n * @property {string} method - The request's HTTP method.\n * @property {Object} query - A query object, which will be transformed into\n *   a URL query string.\n * @property {Object} params - A route parameters object, whose values will\n *   be interpolated the path.\n * @property {Object} headers - The request's headers.\n * @property {Object|string|null} body - Data to send with the request.\n *   If the request has a body, it will also be sent with the header\n *   `'Content-Type: application/json'`.\n * @property {Blob|ArrayBuffer|string|ReadStream} file - A file to\n *   send with the request. The browser client accepts Blobs and ArrayBuffers;\n *   the Node client accepts strings (filepaths) and ReadStreams.\n * @property {string} encoding - The encoding of the response.\n * @property {string} sendFileAs - The method to send the `file`. Options are\n *   `data` (x-www-form-urlencoded) or `form` (multipart/form-data).\n */\n\n/**\n * @ignore\n * @param {MapiClient} client\n * @param {Object} options\n * @param {string} options.method\n * @param {string} options.path\n * @param {Object} [options.query={}]\n * @param {Object} [options.params={}]\n * @param {string} [options.origin]\n * @param {Object} [options.headers]\n * @param {Object} [options.body=null]\n * @param {Blob|ArrayBuffer|string|ReadStream} [options.file=null]\n * @param {string} [options.encoding=utf8]\n */\nfunction MapiRequest(client, options) {\n  if (!client) {\n    throw new Error('MapiRequest requires a client');\n  }\n  if (!options || !options.path || !options.method) {\n    throw new Error(\n      'MapiRequest requires an options object with path and method properties'\n    );\n  }\n\n  var defaultHeaders = {};\n  if (options.body) {\n    defaultHeaders['content-type'] = 'application/json';\n  }\n\n  var headersWithDefaults = xtend(defaultHeaders, options.headers);\n\n  // Disallows duplicate header names of mixed case,\n  // e.g. Content-Type and content-type.\n  var headers = Object.keys(headersWithDefaults).reduce(function(memo, name) {\n    memo[name.toLowerCase()] = headersWithDefaults[name];\n    return memo;\n  }, {});\n\n  this.id = requestId++;\n  this._options = options;\n\n  this.emitter = new EventEmitter();\n  this.client = client;\n  this.response = null;\n  this.error = null;\n  this.sent = false;\n  this.aborted = false;\n  this.path = options.path;\n  this.method = options.method;\n  this.origin = options.origin || client.origin;\n  this.query = options.query || {};\n  this.params = options.params || {};\n  this.body = options.body || null;\n  this.file = options.file || null;\n  this.encoding = options.encoding || 'utf8';\n  this.sendFileAs = options.sendFileAs || null;\n  this.headers = headers;\n}\n\n/**\n * Get the URL of the request.\n *\n * @param {string} [accessToken] - By default, the access token of the request's\n *   client is used.\n * @return {string}\n */\nMapiRequest.prototype.url = function url(accessToken) {\n  var url = urlUtils.prependOrigin(this.path, this.origin);\n  url = urlUtils.appendQueryObject(url, this.query);\n  var routeParams = this.params;\n  var actualAccessToken =\n    accessToken == null ? this.client.accessToken : accessToken;\n  if (actualAccessToken) {\n    url = urlUtils.appendQueryParam(url, 'access_token', actualAccessToken);\n    var accessTokenOwnerId = parseToken(actualAccessToken).user;\n    routeParams = xtend({ ownerId: accessTokenOwnerId }, routeParams);\n  }\n  url = urlUtils.interpolateRouteParams(url, routeParams);\n  return url;\n};\n\n/**\n * Send the request. Returns a Promise that resolves with a `MapiResponse`.\n * You probably want to use `response.body`.\n *\n * `send` only retrieves the first page of paginated results. You can get\n * the next page by using the `MapiResponse`'s [`nextPage`](#nextpage)\n * function, or iterate through all pages using [`eachPage`](#eachpage)\n * instead of `send`.\n *\n * @returns {Promise<MapiResponse>}\n */\nMapiRequest.prototype.send = function send() {\n  var self = this;\n\n  if (self.sent) {\n    throw new Error(\n      'This request has already been sent. Check the response and error properties. Create a new request with clone().'\n    );\n  }\n  self.sent = true;\n\n  return self.client.sendRequest(self).then(\n    function(response) {\n      self.response = response;\n      self.emitter.emit(constants.EVENT_RESPONSE, response);\n      return response;\n    },\n    function(error) {\n      self.error = error;\n      self.emitter.emit(constants.EVENT_ERROR, error);\n      throw error;\n    }\n  );\n};\n\n/**\n * Abort the request.\n *\n * Any pending `Promise` returned by [`send`](#send) will be rejected with\n * an error with `type: 'RequestAbortedError'`. If you've created a request\n * that might be aborted, you need to catch and handle such errors.\n *\n * This method will also abort any requests created while fetching subsequent\n * pages via [`eachPage`](#eachpage).\n *\n * If the request has not been sent or has already been aborted, nothing\n * will happen.\n */\nMapiRequest.prototype.abort = function abort() {\n  if (this._nextPageRequest) {\n    this._nextPageRequest.abort();\n    delete this._nextPageRequest;\n  }\n\n  if (this.response || this.error || this.aborted) return;\n\n  this.aborted = true;\n  this.client.abortRequest(this);\n};\n\n/**\n * Invoke a callback for each page of a paginated API response.\n *\n * The callback should have the following signature:\n *\n * ```js\n * (\n *   error: MapiError,\n *   response: MapiResponse,\n *   next: () => void\n * ) => void\n * ```\n *\n * **The next page will not be fetched until you've invoked the\n * `next` callback**, indicating that you're ready for it.\n *\n * @param {Function} callback\n */\nMapiRequest.prototype.eachPage = function eachPage(callback) {\n  var self = this;\n\n  function handleResponse(response) {\n    function getNextPage() {\n      delete self._nextPageRequest;\n      var nextPageRequest = response.nextPage();\n      if (nextPageRequest) {\n        self._nextPageRequest = nextPageRequest;\n        getPage(nextPageRequest);\n      }\n    }\n    callback(null, response, getNextPage);\n  }\n\n  function handleError(error) {\n    callback(error, null, function() {});\n  }\n\n  function getPage(request) {\n    request.send().then(handleResponse, handleError);\n  }\n  getPage(this);\n};\n\n/**\n * Clone this request.\n *\n * Each request can only be sent *once*. So if you'd like to send the\n * same request again, clone it and send away.\n *\n * @returns {MapiRequest} - A new `MapiRequest` configured just like this one.\n */\nMapiRequest.prototype.clone = function clone() {\n  return this._extend();\n};\n\n/**\n * @ignore\n */\nMapiRequest.prototype._extend = function _extend(options) {\n  var extendedOptions = xtend(this._options, options);\n  return new MapiRequest(this.client, extendedOptions);\n};\n\nmodule.exports = MapiRequest;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@mapbox/mapbox-sdk/lib/classes/mapi-request.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@mapbox/mapbox-sdk/lib/classes/mapi-response.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@mapbox/mapbox-sdk/lib/classes/mapi-response.js ***!
  \**********************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n\nvar parseLinkHeader = __webpack_require__(/*! ../helpers/parse-link-header */ \"(ssr)/./node_modules/@mapbox/mapbox-sdk/lib/helpers/parse-link-header.js\");\n\n/**\n * A Mapbox API response.\n *\n * @class MapiResponse\n * @property {Object} body - The response body, parsed as JSON.\n * @property {string} rawBody - The raw response body.\n * @property {number} statusCode - The response's status code.\n * @property {Object} headers - The parsed response headers.\n * @property {Object} links - The parsed response links.\n * @property {MapiRequest} request - The response's originating `MapiRequest`.\n */\n\n/**\n * @ignore\n * @param {MapiRequest} request\n * @param {Object} responseData\n * @param {Object} responseData.headers\n * @param {string} responseData.body\n * @param {number} responseData.statusCode\n */\nfunction MapiResponse(request, responseData) {\n  this.request = request;\n  this.headers = responseData.headers;\n  this.rawBody = responseData.body;\n  this.statusCode = responseData.statusCode;\n  try {\n    this.body = JSON.parse(responseData.body || '{}');\n  } catch (parseError) {\n    this.body = responseData.body;\n  }\n  this.links = parseLinkHeader(this.headers.link);\n}\n\n/**\n * Check if there is a next page that you can fetch.\n *\n * @returns {boolean}\n */\nMapiResponse.prototype.hasNextPage = function hasNextPage() {\n  return !!this.links.next;\n};\n\n/**\n * Create a request for the next page, if there is one.\n * If there is no next page, returns `null`.\n *\n * @returns {MapiRequest | null}\n */\nMapiResponse.prototype.nextPage = function nextPage() {\n  if (!this.hasNextPage()) return null;\n  return this.request._extend({\n    path: this.links.next.url\n  });\n};\n\nmodule.exports = MapiResponse;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG1hcGJveC9tYXBib3gtc2RrL2xpYi9jbGFzc2VzL21hcGktcmVzcG9uc2UuanMiLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWIsc0JBQXNCLG1CQUFPLENBQUMsOEdBQThCOztBQUU1RDtBQUNBO0FBQ0E7QUFDQTtBQUNBLGNBQWMsUUFBUTtBQUN0QixjQUFjLFFBQVE7QUFDdEIsY0FBYyxRQUFRO0FBQ3RCLGNBQWMsUUFBUTtBQUN0QixjQUFjLFFBQVE7QUFDdEIsY0FBYyxhQUFhO0FBQzNCOztBQUVBO0FBQ0E7QUFDQSxXQUFXLGFBQWE7QUFDeEIsV0FBVyxRQUFRO0FBQ25CLFdBQVcsUUFBUTtBQUNuQixXQUFXLFFBQVE7QUFDbkIsV0FBVyxRQUFRO0FBQ25CO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbURBQW1EO0FBQ25ELElBQUk7QUFDSjtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDs7QUFFQSIsInNvdXJjZXMiOlsid2VicGFjazovL3RyYWluLWZyb250ZW5kLWN3Ly4vbm9kZV9tb2R1bGVzL0BtYXBib3gvbWFwYm94LXNkay9saWIvY2xhc3Nlcy9tYXBpLXJlc3BvbnNlLmpzP2Q2NDYiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG52YXIgcGFyc2VMaW5rSGVhZGVyID0gcmVxdWlyZSgnLi4vaGVscGVycy9wYXJzZS1saW5rLWhlYWRlcicpO1xuXG4vKipcbiAqIEEgTWFwYm94IEFQSSByZXNwb25zZS5cbiAqXG4gKiBAY2xhc3MgTWFwaVJlc3BvbnNlXG4gKiBAcHJvcGVydHkge09iamVjdH0gYm9keSAtIFRoZSByZXNwb25zZSBib2R5LCBwYXJzZWQgYXMgSlNPTi5cbiAqIEBwcm9wZXJ0eSB7c3RyaW5nfSByYXdCb2R5IC0gVGhlIHJhdyByZXNwb25zZSBib2R5LlxuICogQHByb3BlcnR5IHtudW1iZXJ9IHN0YXR1c0NvZGUgLSBUaGUgcmVzcG9uc2UncyBzdGF0dXMgY29kZS5cbiAqIEBwcm9wZXJ0eSB7T2JqZWN0fSBoZWFkZXJzIC0gVGhlIHBhcnNlZCByZXNwb25zZSBoZWFkZXJzLlxuICogQHByb3BlcnR5IHtPYmplY3R9IGxpbmtzIC0gVGhlIHBhcnNlZCByZXNwb25zZSBsaW5rcy5cbiAqIEBwcm9wZXJ0eSB7TWFwaVJlcXVlc3R9IHJlcXVlc3QgLSBUaGUgcmVzcG9uc2UncyBvcmlnaW5hdGluZyBgTWFwaVJlcXVlc3RgLlxuICovXG5cbi8qKlxuICogQGlnbm9yZVxuICogQHBhcmFtIHtNYXBpUmVxdWVzdH0gcmVxdWVzdFxuICogQHBhcmFtIHtPYmplY3R9IHJlc3BvbnNlRGF0YVxuICogQHBhcmFtIHtPYmplY3R9IHJlc3BvbnNlRGF0YS5oZWFkZXJzXG4gKiBAcGFyYW0ge3N0cmluZ30gcmVzcG9uc2VEYXRhLmJvZHlcbiAqIEBwYXJhbSB7bnVtYmVyfSByZXNwb25zZURhdGEuc3RhdHVzQ29kZVxuICovXG5mdW5jdGlvbiBNYXBpUmVzcG9uc2UocmVxdWVzdCwgcmVzcG9uc2VEYXRhKSB7XG4gIHRoaXMucmVxdWVzdCA9IHJlcXVlc3Q7XG4gIHRoaXMuaGVhZGVycyA9IHJlc3BvbnNlRGF0YS5oZWFkZXJzO1xuICB0aGlzLnJhd0JvZHkgPSByZXNwb25zZURhdGEuYm9keTtcbiAgdGhpcy5zdGF0dXNDb2RlID0gcmVzcG9uc2VEYXRhLnN0YXR1c0NvZGU7XG4gIHRyeSB7XG4gICAgdGhpcy5ib2R5ID0gSlNPTi5wYXJzZShyZXNwb25zZURhdGEuYm9keSB8fCAne30nKTtcbiAgfSBjYXRjaCAocGFyc2VFcnJvcikge1xuICAgIHRoaXMuYm9keSA9IHJlc3BvbnNlRGF0YS5ib2R5O1xuICB9XG4gIHRoaXMubGlua3MgPSBwYXJzZUxpbmtIZWFkZXIodGhpcy5oZWFkZXJzLmxpbmspO1xufVxuXG4vKipcbiAqIENoZWNrIGlmIHRoZXJlIGlzIGEgbmV4dCBwYWdlIHRoYXQgeW91IGNhbiBmZXRjaC5cbiAqXG4gKiBAcmV0dXJucyB7Ym9vbGVhbn1cbiAqL1xuTWFwaVJlc3BvbnNlLnByb3RvdHlwZS5oYXNOZXh0UGFnZSA9IGZ1bmN0aW9uIGhhc05leHRQYWdlKCkge1xuICByZXR1cm4gISF0aGlzLmxpbmtzLm5leHQ7XG59O1xuXG4vKipcbiAqIENyZWF0ZSBhIHJlcXVlc3QgZm9yIHRoZSBuZXh0IHBhZ2UsIGlmIHRoZXJlIGlzIG9uZS5cbiAqIElmIHRoZXJlIGlzIG5vIG5leHQgcGFnZSwgcmV0dXJucyBgbnVsbGAuXG4gKlxuICogQHJldHVybnMge01hcGlSZXF1ZXN0IHwgbnVsbH1cbiAqL1xuTWFwaVJlc3BvbnNlLnByb3RvdHlwZS5uZXh0UGFnZSA9IGZ1bmN0aW9uIG5leHRQYWdlKCkge1xuICBpZiAoIXRoaXMuaGFzTmV4dFBhZ2UoKSkgcmV0dXJuIG51bGw7XG4gIHJldHVybiB0aGlzLnJlcXVlc3QuX2V4dGVuZCh7XG4gICAgcGF0aDogdGhpcy5saW5rcy5uZXh0LnVybFxuICB9KTtcbn07XG5cbm1vZHVsZS5leHBvcnRzID0gTWFwaVJlc3BvbnNlO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@mapbox/mapbox-sdk/lib/classes/mapi-response.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@mapbox/mapbox-sdk/lib/client.js":
/*!*******************************************************!*\
  !*** ./node_modules/@mapbox/mapbox-sdk/lib/client.js ***!
  \*******************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n\n// The \"browser\" field in \"package.json\" instructs browser\n// bundlers to override this an load browser/browser-client, instead.\nvar nodeClient = __webpack_require__(/*! ./node/node-client */ \"(ssr)/./node_modules/@mapbox/mapbox-sdk/lib/node/node-client.js\");\n\nmodule.exports = nodeClient;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG1hcGJveC9tYXBib3gtc2RrL2xpYi9jbGllbnQuanMiLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWI7QUFDQTtBQUNBLGlCQUFpQixtQkFBTyxDQUFDLDJGQUFvQjs7QUFFN0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly90cmFpbi1mcm9udGVuZC1jdy8uL25vZGVfbW9kdWxlcy9AbWFwYm94L21hcGJveC1zZGsvbGliL2NsaWVudC5qcz82ODliIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuLy8gVGhlIFwiYnJvd3NlclwiIGZpZWxkIGluIFwicGFja2FnZS5qc29uXCIgaW5zdHJ1Y3RzIGJyb3dzZXJcbi8vIGJ1bmRsZXJzIHRvIG92ZXJyaWRlIHRoaXMgYW4gbG9hZCBicm93c2VyL2Jyb3dzZXItY2xpZW50LCBpbnN0ZWFkLlxudmFyIG5vZGVDbGllbnQgPSByZXF1aXJlKCcuL25vZGUvbm9kZS1jbGllbnQnKTtcblxubW9kdWxlLmV4cG9ydHMgPSBub2RlQ2xpZW50O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@mapbox/mapbox-sdk/lib/client.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@mapbox/mapbox-sdk/lib/constants.js":
/*!**********************************************************!*\
  !*** ./node_modules/@mapbox/mapbox-sdk/lib/constants.js ***!
  \**********************************************************/
/***/ ((module) => {

eval("\n\nmodule.exports = {\n  API_ORIGIN: 'https://api.mapbox.com',\n  EVENT_PROGRESS_DOWNLOAD: 'downloadProgress',\n  EVENT_PROGRESS_UPLOAD: 'uploadProgress',\n  EVENT_ERROR: 'error',\n  EVENT_RESPONSE: 'response',\n  ERROR_HTTP: 'HttpError',\n  ERROR_REQUEST_ABORTED: 'RequestAbortedError'\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG1hcGJveC9tYXBib3gtc2RrL2xpYi9jb25zdGFudHMuanMiLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdHJhaW4tZnJvbnRlbmQtY3cvLi9ub2RlX21vZHVsZXMvQG1hcGJveC9tYXBib3gtc2RrL2xpYi9jb25zdGFudHMuanM/M2MxMCJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbm1vZHVsZS5leHBvcnRzID0ge1xuICBBUElfT1JJR0lOOiAnaHR0cHM6Ly9hcGkubWFwYm94LmNvbScsXG4gIEVWRU5UX1BST0dSRVNTX0RPV05MT0FEOiAnZG93bmxvYWRQcm9ncmVzcycsXG4gIEVWRU5UX1BST0dSRVNTX1VQTE9BRDogJ3VwbG9hZFByb2dyZXNzJyxcbiAgRVZFTlRfRVJST1I6ICdlcnJvcicsXG4gIEVWRU5UX1JFU1BPTlNFOiAncmVzcG9uc2UnLFxuICBFUlJPUl9IVFRQOiAnSHR0cEVycm9yJyxcbiAgRVJST1JfUkVRVUVTVF9BQk9SVEVEOiAnUmVxdWVzdEFib3J0ZWRFcnJvcidcbn07XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@mapbox/mapbox-sdk/lib/constants.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@mapbox/mapbox-sdk/lib/helpers/parse-link-header.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@mapbox/mapbox-sdk/lib/helpers/parse-link-header.js ***!
  \**************************************************************************/
/***/ ((module) => {

eval("\n\n// Like https://github.com/thlorenz/lib/parse-link-header but without any\n// additional dependencies.\n\nfunction parseParam(param) {\n  var parts = param.match(/\\s*(.+)\\s*=\\s*\"?([^\"]+)\"?/);\n  if (!parts) return null;\n\n  return {\n    key: parts[1],\n    value: parts[2]\n  };\n}\n\nfunction parseLink(link) {\n  var parts = link.match(/<?([^>]*)>(.*)/);\n  if (!parts) return null;\n\n  var linkUrl = parts[1];\n  var linkParams = parts[2].split(';');\n  var rel = null;\n  var parsedLinkParams = linkParams.reduce(function(result, param) {\n    var parsed = parseParam(param);\n    if (!parsed) return result;\n    if (parsed.key === 'rel') {\n      if (!rel) {\n        rel = parsed.value;\n      }\n      return result;\n    }\n    result[parsed.key] = parsed.value;\n    return result;\n  }, {});\n  if (!rel) return null;\n\n  return {\n    url: linkUrl,\n    rel: rel,\n    params: parsedLinkParams\n  };\n}\n\n/**\n * Parse a Link header.\n *\n * @param {string} linkHeader\n * @returns {{\n *   [string]: {\n *     url: string,\n *     params: { [string]: string }\n *   }\n * }}\n */\nfunction parseLinkHeader(linkHeader) {\n  if (!linkHeader) return {};\n\n  return linkHeader.split(/,\\s*</).reduce(function(result, link) {\n    var parsed = parseLink(link);\n    if (!parsed) return result;\n    // rel value can be multiple whitespace-separated rels.\n    var splitRel = parsed.rel.split(/\\s+/);\n    splitRel.forEach(function(rel) {\n      if (!result[rel]) {\n        result[rel] = {\n          url: parsed.url,\n          params: parsed.params\n        };\n      }\n    });\n    return result;\n  }, {});\n}\n\nmodule.exports = parseLinkHeader;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG1hcGJveC9tYXBib3gtc2RrL2xpYi9oZWxwZXJzL3BhcnNlLWxpbmstaGVhZGVyLmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0Esb0NBQW9DO0FBQ3BDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUcsSUFBSTtBQUNQOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLFFBQVE7QUFDbkI7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCO0FBQ2pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0EsR0FBRyxJQUFJO0FBQ1A7O0FBRUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly90cmFpbi1mcm9udGVuZC1jdy8uL25vZGVfbW9kdWxlcy9AbWFwYm94L21hcGJveC1zZGsvbGliL2hlbHBlcnMvcGFyc2UtbGluay1oZWFkZXIuanM/ZGU4NSJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbi8vIExpa2UgaHR0cHM6Ly9naXRodWIuY29tL3RobG9yZW56L2xpYi9wYXJzZS1saW5rLWhlYWRlciBidXQgd2l0aG91dCBhbnlcbi8vIGFkZGl0aW9uYWwgZGVwZW5kZW5jaWVzLlxuXG5mdW5jdGlvbiBwYXJzZVBhcmFtKHBhcmFtKSB7XG4gIHZhciBwYXJ0cyA9IHBhcmFtLm1hdGNoKC9cXHMqKC4rKVxccyo9XFxzKlwiPyhbXlwiXSspXCI/Lyk7XG4gIGlmICghcGFydHMpIHJldHVybiBudWxsO1xuXG4gIHJldHVybiB7XG4gICAga2V5OiBwYXJ0c1sxXSxcbiAgICB2YWx1ZTogcGFydHNbMl1cbiAgfTtcbn1cblxuZnVuY3Rpb24gcGFyc2VMaW5rKGxpbmspIHtcbiAgdmFyIHBhcnRzID0gbGluay5tYXRjaCgvPD8oW14+XSopPiguKikvKTtcbiAgaWYgKCFwYXJ0cykgcmV0dXJuIG51bGw7XG5cbiAgdmFyIGxpbmtVcmwgPSBwYXJ0c1sxXTtcbiAgdmFyIGxpbmtQYXJhbXMgPSBwYXJ0c1syXS5zcGxpdCgnOycpO1xuICB2YXIgcmVsID0gbnVsbDtcbiAgdmFyIHBhcnNlZExpbmtQYXJhbXMgPSBsaW5rUGFyYW1zLnJlZHVjZShmdW5jdGlvbihyZXN1bHQsIHBhcmFtKSB7XG4gICAgdmFyIHBhcnNlZCA9IHBhcnNlUGFyYW0ocGFyYW0pO1xuICAgIGlmICghcGFyc2VkKSByZXR1cm4gcmVzdWx0O1xuICAgIGlmIChwYXJzZWQua2V5ID09PSAncmVsJykge1xuICAgICAgaWYgKCFyZWwpIHtcbiAgICAgICAgcmVsID0gcGFyc2VkLnZhbHVlO1xuICAgICAgfVxuICAgICAgcmV0dXJuIHJlc3VsdDtcbiAgICB9XG4gICAgcmVzdWx0W3BhcnNlZC5rZXldID0gcGFyc2VkLnZhbHVlO1xuICAgIHJldHVybiByZXN1bHQ7XG4gIH0sIHt9KTtcbiAgaWYgKCFyZWwpIHJldHVybiBudWxsO1xuXG4gIHJldHVybiB7XG4gICAgdXJsOiBsaW5rVXJsLFxuICAgIHJlbDogcmVsLFxuICAgIHBhcmFtczogcGFyc2VkTGlua1BhcmFtc1xuICB9O1xufVxuXG4vKipcbiAqIFBhcnNlIGEgTGluayBoZWFkZXIuXG4gKlxuICogQHBhcmFtIHtzdHJpbmd9IGxpbmtIZWFkZXJcbiAqIEByZXR1cm5zIHt7XG4gKiAgIFtzdHJpbmddOiB7XG4gKiAgICAgdXJsOiBzdHJpbmcsXG4gKiAgICAgcGFyYW1zOiB7IFtzdHJpbmddOiBzdHJpbmcgfVxuICogICB9XG4gKiB9fVxuICovXG5mdW5jdGlvbiBwYXJzZUxpbmtIZWFkZXIobGlua0hlYWRlcikge1xuICBpZiAoIWxpbmtIZWFkZXIpIHJldHVybiB7fTtcblxuICByZXR1cm4gbGlua0hlYWRlci5zcGxpdCgvLFxccyo8LykucmVkdWNlKGZ1bmN0aW9uKHJlc3VsdCwgbGluaykge1xuICAgIHZhciBwYXJzZWQgPSBwYXJzZUxpbmsobGluayk7XG4gICAgaWYgKCFwYXJzZWQpIHJldHVybiByZXN1bHQ7XG4gICAgLy8gcmVsIHZhbHVlIGNhbiBiZSBtdWx0aXBsZSB3aGl0ZXNwYWNlLXNlcGFyYXRlZCByZWxzLlxuICAgIHZhciBzcGxpdFJlbCA9IHBhcnNlZC5yZWwuc3BsaXQoL1xccysvKTtcbiAgICBzcGxpdFJlbC5mb3JFYWNoKGZ1bmN0aW9uKHJlbCkge1xuICAgICAgaWYgKCFyZXN1bHRbcmVsXSkge1xuICAgICAgICByZXN1bHRbcmVsXSA9IHtcbiAgICAgICAgICB1cmw6IHBhcnNlZC51cmwsXG4gICAgICAgICAgcGFyYW1zOiBwYXJzZWQucGFyYW1zXG4gICAgICAgIH07XG4gICAgICB9XG4gICAgfSk7XG4gICAgcmV0dXJuIHJlc3VsdDtcbiAgfSwge30pO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IHBhcnNlTGlua0hlYWRlcjtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@mapbox/mapbox-sdk/lib/helpers/parse-link-header.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@mapbox/mapbox-sdk/lib/helpers/url-utils.js":
/*!******************************************************************!*\
  !*** ./node_modules/@mapbox/mapbox-sdk/lib/helpers/url-utils.js ***!
  \******************************************************************/
/***/ ((module) => {

eval("\n\n// Encode each item of an array individually. The comma\n// delimiters should not themselves be encoded.\nfunction encodeArray(arrayValue) {\n  return arrayValue.map(encodeURIComponent).join(',');\n}\n\nfunction encodeValue(value) {\n  if (Array.isArray(value)) {\n    return encodeArray(value);\n  }\n  return encodeURIComponent(String(value));\n}\n\n/**\n * Append a query parameter to a URL.\n *\n * @param {string} url\n * @param {string} key\n * @param {string|number|boolean|Array<*>>} [value] - Provide an array\n *   if the value is a list and commas between values need to be\n *   preserved, unencoded.\n * @returns {string} - Modified URL.\n */\nfunction appendQueryParam(url, key, value) {\n  if (value === false || value === null) {\n    return url;\n  }\n  var punctuation = /\\?/.test(url) ? '&' : '?';\n  var query = encodeURIComponent(key);\n  if (value !== undefined && value !== '' && value !== true) {\n    query += '=' + encodeValue(value);\n  }\n  return '' + url + punctuation + query;\n}\n\n/**\n * Derive a query string from an object and append it\n * to a URL.\n *\n * @param {string} url\n * @param {Object} [queryObject] - Values should be primitives.\n * @returns {string} - Modified URL.\n */\nfunction appendQueryObject(url, queryObject) {\n  if (!queryObject) {\n    return url;\n  }\n\n  var result = url;\n  Object.keys(queryObject).forEach(function(key) {\n    var value = queryObject[key];\n    if (value === undefined) {\n      return;\n    }\n    if (Array.isArray(value)) {\n      value = value\n        .filter(function(v) {\n          return v !== null && v !== undefined;\n        })\n        .join(',');\n    }\n    result = appendQueryParam(result, key, value);\n  });\n  return result;\n}\n\n/**\n * Prepend an origin to a URL. If the URL already has an\n * origin, do nothing.\n *\n * @param {string} url\n * @param {string} origin\n * @returns {string} - Modified URL.\n */\nfunction prependOrigin(url, origin) {\n  if (!origin) {\n    return url;\n  }\n\n  if (url.slice(0, 4) === 'http') {\n    return url;\n  }\n\n  var delimiter = url[0] === '/' ? '' : '/';\n  return '' + origin.replace(/\\/$/, '') + delimiter + url;\n}\n\n/**\n * Interpolate values into a route with express-style,\n * colon-prefixed route parameters.\n *\n * @param {string} route\n * @param {Object} [params] - Values should be primitives\n *   or arrays of primitives. Provide an array if the value\n *   is a list and commas between values need to be\n *   preserved, unencoded.\n * @returns {string} - Modified URL.\n */\nfunction interpolateRouteParams(route, params) {\n  if (!params) {\n    return route;\n  }\n  return route.replace(/\\/:([a-zA-Z0-9]+)/g, function(_, paramId) {\n    var value = params[paramId];\n    if (value === undefined) {\n      throw new Error('Unspecified route parameter ' + paramId);\n    }\n    var preppedValue = encodeValue(value);\n    return '/' + preppedValue;\n  });\n}\n\nmodule.exports = {\n  appendQueryObject: appendQueryObject,\n  appendQueryParam: appendQueryParam,\n  prependOrigin: prependOrigin,\n  interpolateRouteParams: interpolateRouteParams\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG1hcGJveC9tYXBib3gtc2RrL2xpYi9oZWxwZXJzL3VybC11dGlscy5qcyIsIm1hcHBpbmdzIjoiQUFBYTs7QUFFYjtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLFFBQVE7QUFDbkIsV0FBVyxRQUFRO0FBQ25CLFdBQVcsaUNBQWlDO0FBQzVDO0FBQ0E7QUFDQSxhQUFhLFFBQVE7QUFDckI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxRQUFRO0FBQ25CLFdBQVcsUUFBUTtBQUNuQixhQUFhLFFBQVE7QUFDckI7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsUUFBUTtBQUNuQixXQUFXLFFBQVE7QUFDbkIsYUFBYSxRQUFRO0FBQ3JCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsUUFBUTtBQUNuQixXQUFXLFFBQVE7QUFDbkI7QUFDQTtBQUNBO0FBQ0EsYUFBYSxRQUFRO0FBQ3JCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly90cmFpbi1mcm9udGVuZC1jdy8uL25vZGVfbW9kdWxlcy9AbWFwYm94L21hcGJveC1zZGsvbGliL2hlbHBlcnMvdXJsLXV0aWxzLmpzPzcxOTEiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG4vLyBFbmNvZGUgZWFjaCBpdGVtIG9mIGFuIGFycmF5IGluZGl2aWR1YWxseS4gVGhlIGNvbW1hXG4vLyBkZWxpbWl0ZXJzIHNob3VsZCBub3QgdGhlbXNlbHZlcyBiZSBlbmNvZGVkLlxuZnVuY3Rpb24gZW5jb2RlQXJyYXkoYXJyYXlWYWx1ZSkge1xuICByZXR1cm4gYXJyYXlWYWx1ZS5tYXAoZW5jb2RlVVJJQ29tcG9uZW50KS5qb2luKCcsJyk7XG59XG5cbmZ1bmN0aW9uIGVuY29kZVZhbHVlKHZhbHVlKSB7XG4gIGlmIChBcnJheS5pc0FycmF5KHZhbHVlKSkge1xuICAgIHJldHVybiBlbmNvZGVBcnJheSh2YWx1ZSk7XG4gIH1cbiAgcmV0dXJuIGVuY29kZVVSSUNvbXBvbmVudChTdHJpbmcodmFsdWUpKTtcbn1cblxuLyoqXG4gKiBBcHBlbmQgYSBxdWVyeSBwYXJhbWV0ZXIgdG8gYSBVUkwuXG4gKlxuICogQHBhcmFtIHtzdHJpbmd9IHVybFxuICogQHBhcmFtIHtzdHJpbmd9IGtleVxuICogQHBhcmFtIHtzdHJpbmd8bnVtYmVyfGJvb2xlYW58QXJyYXk8Kj4+fSBbdmFsdWVdIC0gUHJvdmlkZSBhbiBhcnJheVxuICogICBpZiB0aGUgdmFsdWUgaXMgYSBsaXN0IGFuZCBjb21tYXMgYmV0d2VlbiB2YWx1ZXMgbmVlZCB0byBiZVxuICogICBwcmVzZXJ2ZWQsIHVuZW5jb2RlZC5cbiAqIEByZXR1cm5zIHtzdHJpbmd9IC0gTW9kaWZpZWQgVVJMLlxuICovXG5mdW5jdGlvbiBhcHBlbmRRdWVyeVBhcmFtKHVybCwga2V5LCB2YWx1ZSkge1xuICBpZiAodmFsdWUgPT09IGZhbHNlIHx8IHZhbHVlID09PSBudWxsKSB7XG4gICAgcmV0dXJuIHVybDtcbiAgfVxuICB2YXIgcHVuY3R1YXRpb24gPSAvXFw/Ly50ZXN0KHVybCkgPyAnJicgOiAnPyc7XG4gIHZhciBxdWVyeSA9IGVuY29kZVVSSUNvbXBvbmVudChrZXkpO1xuICBpZiAodmFsdWUgIT09IHVuZGVmaW5lZCAmJiB2YWx1ZSAhPT0gJycgJiYgdmFsdWUgIT09IHRydWUpIHtcbiAgICBxdWVyeSArPSAnPScgKyBlbmNvZGVWYWx1ZSh2YWx1ZSk7XG4gIH1cbiAgcmV0dXJuICcnICsgdXJsICsgcHVuY3R1YXRpb24gKyBxdWVyeTtcbn1cblxuLyoqXG4gKiBEZXJpdmUgYSBxdWVyeSBzdHJpbmcgZnJvbSBhbiBvYmplY3QgYW5kIGFwcGVuZCBpdFxuICogdG8gYSBVUkwuXG4gKlxuICogQHBhcmFtIHtzdHJpbmd9IHVybFxuICogQHBhcmFtIHtPYmplY3R9IFtxdWVyeU9iamVjdF0gLSBWYWx1ZXMgc2hvdWxkIGJlIHByaW1pdGl2ZXMuXG4gKiBAcmV0dXJucyB7c3RyaW5nfSAtIE1vZGlmaWVkIFVSTC5cbiAqL1xuZnVuY3Rpb24gYXBwZW5kUXVlcnlPYmplY3QodXJsLCBxdWVyeU9iamVjdCkge1xuICBpZiAoIXF1ZXJ5T2JqZWN0KSB7XG4gICAgcmV0dXJuIHVybDtcbiAgfVxuXG4gIHZhciByZXN1bHQgPSB1cmw7XG4gIE9iamVjdC5rZXlzKHF1ZXJ5T2JqZWN0KS5mb3JFYWNoKGZ1bmN0aW9uKGtleSkge1xuICAgIHZhciB2YWx1ZSA9IHF1ZXJ5T2JqZWN0W2tleV07XG4gICAgaWYgKHZhbHVlID09PSB1bmRlZmluZWQpIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG4gICAgaWYgKEFycmF5LmlzQXJyYXkodmFsdWUpKSB7XG4gICAgICB2YWx1ZSA9IHZhbHVlXG4gICAgICAgIC5maWx0ZXIoZnVuY3Rpb24odikge1xuICAgICAgICAgIHJldHVybiB2ICE9PSBudWxsICYmIHYgIT09IHVuZGVmaW5lZDtcbiAgICAgICAgfSlcbiAgICAgICAgLmpvaW4oJywnKTtcbiAgICB9XG4gICAgcmVzdWx0ID0gYXBwZW5kUXVlcnlQYXJhbShyZXN1bHQsIGtleSwgdmFsdWUpO1xuICB9KTtcbiAgcmV0dXJuIHJlc3VsdDtcbn1cblxuLyoqXG4gKiBQcmVwZW5kIGFuIG9yaWdpbiB0byBhIFVSTC4gSWYgdGhlIFVSTCBhbHJlYWR5IGhhcyBhblxuICogb3JpZ2luLCBkbyBub3RoaW5nLlxuICpcbiAqIEBwYXJhbSB7c3RyaW5nfSB1cmxcbiAqIEBwYXJhbSB7c3RyaW5nfSBvcmlnaW5cbiAqIEByZXR1cm5zIHtzdHJpbmd9IC0gTW9kaWZpZWQgVVJMLlxuICovXG5mdW5jdGlvbiBwcmVwZW5kT3JpZ2luKHVybCwgb3JpZ2luKSB7XG4gIGlmICghb3JpZ2luKSB7XG4gICAgcmV0dXJuIHVybDtcbiAgfVxuXG4gIGlmICh1cmwuc2xpY2UoMCwgNCkgPT09ICdodHRwJykge1xuICAgIHJldHVybiB1cmw7XG4gIH1cblxuICB2YXIgZGVsaW1pdGVyID0gdXJsWzBdID09PSAnLycgPyAnJyA6ICcvJztcbiAgcmV0dXJuICcnICsgb3JpZ2luLnJlcGxhY2UoL1xcLyQvLCAnJykgKyBkZWxpbWl0ZXIgKyB1cmw7XG59XG5cbi8qKlxuICogSW50ZXJwb2xhdGUgdmFsdWVzIGludG8gYSByb3V0ZSB3aXRoIGV4cHJlc3Mtc3R5bGUsXG4gKiBjb2xvbi1wcmVmaXhlZCByb3V0ZSBwYXJhbWV0ZXJzLlxuICpcbiAqIEBwYXJhbSB7c3RyaW5nfSByb3V0ZVxuICogQHBhcmFtIHtPYmplY3R9IFtwYXJhbXNdIC0gVmFsdWVzIHNob3VsZCBiZSBwcmltaXRpdmVzXG4gKiAgIG9yIGFycmF5cyBvZiBwcmltaXRpdmVzLiBQcm92aWRlIGFuIGFycmF5IGlmIHRoZSB2YWx1ZVxuICogICBpcyBhIGxpc3QgYW5kIGNvbW1hcyBiZXR3ZWVuIHZhbHVlcyBuZWVkIHRvIGJlXG4gKiAgIHByZXNlcnZlZCwgdW5lbmNvZGVkLlxuICogQHJldHVybnMge3N0cmluZ30gLSBNb2RpZmllZCBVUkwuXG4gKi9cbmZ1bmN0aW9uIGludGVycG9sYXRlUm91dGVQYXJhbXMocm91dGUsIHBhcmFtcykge1xuICBpZiAoIXBhcmFtcykge1xuICAgIHJldHVybiByb3V0ZTtcbiAgfVxuICByZXR1cm4gcm91dGUucmVwbGFjZSgvXFwvOihbYS16QS1aMC05XSspL2csIGZ1bmN0aW9uKF8sIHBhcmFtSWQpIHtcbiAgICB2YXIgdmFsdWUgPSBwYXJhbXNbcGFyYW1JZF07XG4gICAgaWYgKHZhbHVlID09PSB1bmRlZmluZWQpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcignVW5zcGVjaWZpZWQgcm91dGUgcGFyYW1ldGVyICcgKyBwYXJhbUlkKTtcbiAgICB9XG4gICAgdmFyIHByZXBwZWRWYWx1ZSA9IGVuY29kZVZhbHVlKHZhbHVlKTtcbiAgICByZXR1cm4gJy8nICsgcHJlcHBlZFZhbHVlO1xuICB9KTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSB7XG4gIGFwcGVuZFF1ZXJ5T2JqZWN0OiBhcHBlbmRRdWVyeU9iamVjdCxcbiAgYXBwZW5kUXVlcnlQYXJhbTogYXBwZW5kUXVlcnlQYXJhbSxcbiAgcHJlcGVuZE9yaWdpbjogcHJlcGVuZE9yaWdpbixcbiAgaW50ZXJwb2xhdGVSb3V0ZVBhcmFtczogaW50ZXJwb2xhdGVSb3V0ZVBhcmFtc1xufTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@mapbox/mapbox-sdk/lib/helpers/url-utils.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@mapbox/mapbox-sdk/lib/node/node-client.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@mapbox/mapbox-sdk/lib/node/node-client.js ***!
  \*****************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n\nvar node = __webpack_require__(/*! ./node-layer */ \"(ssr)/./node_modules/@mapbox/mapbox-sdk/lib/node/node-layer.js\");\nvar MapiClient = __webpack_require__(/*! ../classes/mapi-client */ \"(ssr)/./node_modules/@mapbox/mapbox-sdk/lib/classes/mapi-client.js\");\n\nfunction NodeClient(options) {\n  MapiClient.call(this, options);\n}\nNodeClient.prototype = Object.create(MapiClient.prototype);\nNodeClient.prototype.constructor = NodeClient;\n\nNodeClient.prototype.sendRequest = node.nodeSend;\nNodeClient.prototype.abortRequest = node.nodeAbort;\n\n/**\n * Create a client for Node.\n *\n * @param {Object} options\n * @param {string} options.accessToken\n * @param {string} [options.origin]\n * @returns {MapiClient}\n */\nfunction createNodeClient(options) {\n  return new NodeClient(options);\n}\n\nmodule.exports = createNodeClient;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG1hcGJveC9tYXBib3gtc2RrL2xpYi9ub2RlL25vZGUtY2xpZW50LmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViLFdBQVcsbUJBQU8sQ0FBQyxvRkFBYztBQUNqQyxpQkFBaUIsbUJBQU8sQ0FBQyxrR0FBd0I7O0FBRWpEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLFFBQVE7QUFDbkIsV0FBVyxRQUFRO0FBQ25CLFdBQVcsUUFBUTtBQUNuQixhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7O0FBRUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly90cmFpbi1mcm9udGVuZC1jdy8uL25vZGVfbW9kdWxlcy9AbWFwYm94L21hcGJveC1zZGsvbGliL25vZGUvbm9kZS1jbGllbnQuanM/OTgxMyJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbnZhciBub2RlID0gcmVxdWlyZSgnLi9ub2RlLWxheWVyJyk7XG52YXIgTWFwaUNsaWVudCA9IHJlcXVpcmUoJy4uL2NsYXNzZXMvbWFwaS1jbGllbnQnKTtcblxuZnVuY3Rpb24gTm9kZUNsaWVudChvcHRpb25zKSB7XG4gIE1hcGlDbGllbnQuY2FsbCh0aGlzLCBvcHRpb25zKTtcbn1cbk5vZGVDbGllbnQucHJvdG90eXBlID0gT2JqZWN0LmNyZWF0ZShNYXBpQ2xpZW50LnByb3RvdHlwZSk7XG5Ob2RlQ2xpZW50LnByb3RvdHlwZS5jb25zdHJ1Y3RvciA9IE5vZGVDbGllbnQ7XG5cbk5vZGVDbGllbnQucHJvdG90eXBlLnNlbmRSZXF1ZXN0ID0gbm9kZS5ub2RlU2VuZDtcbk5vZGVDbGllbnQucHJvdG90eXBlLmFib3J0UmVxdWVzdCA9IG5vZGUubm9kZUFib3J0O1xuXG4vKipcbiAqIENyZWF0ZSBhIGNsaWVudCBmb3IgTm9kZS5cbiAqXG4gKiBAcGFyYW0ge09iamVjdH0gb3B0aW9uc1xuICogQHBhcmFtIHtzdHJpbmd9IG9wdGlvbnMuYWNjZXNzVG9rZW5cbiAqIEBwYXJhbSB7c3RyaW5nfSBbb3B0aW9ucy5vcmlnaW5dXG4gKiBAcmV0dXJucyB7TWFwaUNsaWVudH1cbiAqL1xuZnVuY3Rpb24gY3JlYXRlTm9kZUNsaWVudChvcHRpb25zKSB7XG4gIHJldHVybiBuZXcgTm9kZUNsaWVudChvcHRpb25zKTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBjcmVhdGVOb2RlQ2xpZW50O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@mapbox/mapbox-sdk/lib/node/node-client.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@mapbox/mapbox-sdk/lib/node/node-layer.js":
/*!****************************************************************!*\
  !*** ./node_modules/@mapbox/mapbox-sdk/lib/node/node-layer.js ***!
  \****************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n\nvar xtend = __webpack_require__(/*! xtend */ \"(ssr)/./node_modules/xtend/immutable.js\");\nvar fs = __webpack_require__(/*! fs */ \"fs\");\nvar got = __webpack_require__(/*! got */ \"(ssr)/./node_modules/got/dist/source/index.js\");\nvar FormData = __webpack_require__(/*! form-data */ \"(ssr)/./node_modules/form-data/lib/form_data.js\");\nvar MapiResponse = __webpack_require__(/*! ../classes/mapi-response */ \"(ssr)/./node_modules/@mapbox/mapbox-sdk/lib/classes/mapi-response.js\");\nvar MapiError = __webpack_require__(/*! ../classes/mapi-error */ \"(ssr)/./node_modules/@mapbox/mapbox-sdk/lib/classes/mapi-error.js\");\nvar constants = __webpack_require__(/*! ../constants */ \"(ssr)/./node_modules/@mapbox/mapbox-sdk/lib/constants.js\");\n\nvar methodsWithBodies = new Set(['PUT', 'PATCH', 'POST']);\n\n// Keys are request IDs, values are objects with\n// clientRequest and gotStream properties.\nvar requestsUnderway = {};\n\nfunction nodeAbort(request) {\n  var streams = requestsUnderway[request.id];\n  if (!streams) return;\n  streams.clientRequest.abort();\n  delete requestsUnderway[request.id];\n}\n\nfunction normalizeGotProgressEvent(progress) {\n  return xtend(progress, {\n    percent: progress.percent * 100\n  });\n}\n\nfunction createRequestStreams(request) {\n  var url = request.url(request.client.accessToken);\n  var gotOptions = {\n    method: request.method,\n    headers: request.headers,\n    retries: 0,\n    followRedirect: false,\n    throwHttpErrors: false\n  };\n\n  if (typeof request.file === 'string') {\n    if (request.sendFileAs && request.sendFileAs === 'form') {\n      const form = new FormData();\n      form.append('file', fs.createReadStream(request.file));\n      gotOptions.body = form;\n    } else {\n      gotOptions.body = fs.createReadStream(request.file);\n    }\n  } else if (request.file && request.file.pipe) {\n    if (request.sendFileAs && request.sendFileAs === 'form') {\n      const form = new FormData();\n      form.append('file', request.file);\n      gotOptions.body = form;\n    } else {\n      gotOptions.body = request.file;\n    }\n  } else if (typeof request.body === 'string') {\n    // matching service needs to send a www-form-urlencoded request\n    gotOptions.body = request.body;\n  } else if (request.body) {\n    gotOptions.body = JSON.stringify(request.body);\n  }\n\n  if (\n    ['POST', 'PUT', 'PATCH', 'DELETE'].includes(request.method) &&\n    !request.body\n  ) {\n    gotOptions.body = '';\n  }\n\n  var gotStream = got.stream(url, gotOptions);\n\n  gotStream.setEncoding(request.encoding);\n\n  gotStream.on('downloadProgress', function(progress) {\n    request.emitter.emit(\n      constants.EVENT_PROGRESS_DOWNLOAD,\n      normalizeGotProgressEvent(progress)\n    );\n  });\n  gotStream.on('uploadProgress', function(progress) {\n    request.emitter.emit(\n      constants.EVENT_PROGRESS_UPLOAD,\n      normalizeGotProgressEvent(progress)\n    );\n  });\n\n  return new Promise(function(resolve) {\n    gotStream.on('request', function(req) {\n      var clientRequest = req;\n      var streams = { clientRequest: clientRequest, gotStream: gotStream };\n      requestsUnderway[request.id] = streams;\n      resolve(streams);\n    });\n\n    // Got will not end the stream for methods that *can* have\n    // bodies if you don't provide a body, so we'll do it manually.\n    if (\n      methodsWithBodies.has(request.method) &&\n      gotOptions.body === undefined\n    ) {\n      gotStream.end();\n    }\n  });\n}\n\nfunction nodeSend(request) {\n  return Promise.resolve()\n    .then(function() {\n      return createRequestStreams(request);\n    })\n    .then(function(result) {\n      return sendStreams(result.gotStream, result.clientRequest);\n    });\n\n  function sendStreams(gotStream, clientRequest) {\n    return new Promise(function(resolve, reject) {\n      var errored = false;\n      clientRequest.on('abort', function() {\n        var mapiError = new MapiError({\n          request: request,\n          type: constants.ERROR_REQUEST_ABORTED\n        });\n        errored = true;\n        reject(mapiError);\n      });\n\n      var httpsResponse = void 0;\n      var statusCode = void 0;\n      gotStream.on('response', function(res) {\n        httpsResponse = res;\n        statusCode = res.statusCode;\n      });\n\n      var body = '';\n      gotStream.on('data', function(chunk) {\n        body += chunk;\n      });\n\n      gotStream.on('end', function() {\n        if (errored || !httpsResponse) return;\n\n        if (statusCode < 200 || statusCode >= 400) {\n          var mapiError = new MapiError({\n            request: request,\n            body: body,\n            statusCode: statusCode\n          });\n          reject(mapiError);\n          return;\n        }\n\n        try {\n          var response = new MapiResponse(request, {\n            body: body,\n            headers: httpsResponse.headers,\n            statusCode: httpsResponse.statusCode\n          });\n          resolve(response);\n        } catch (responseError) {\n          reject(responseError);\n        }\n      });\n\n      gotStream.on('error', function(error) {\n        errored = true;\n        reject(error);\n      });\n    });\n  }\n}\n\nmodule.exports = {\n  nodeAbort: nodeAbort,\n  nodeSend: nodeSend\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@mapbox/mapbox-sdk/lib/node/node-layer.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@mapbox/mapbox-sdk/services/geocoding.js":
/*!***************************************************************!*\
  !*** ./node_modules/@mapbox/mapbox-sdk/services/geocoding.js ***!
  \***************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n\nvar xtend = __webpack_require__(/*! xtend */ \"(ssr)/./node_modules/xtend/immutable.js\");\nvar v = __webpack_require__(/*! ./service-helpers/validator */ \"(ssr)/./node_modules/@mapbox/mapbox-sdk/services/service-helpers/validator.js\");\nvar pick = __webpack_require__(/*! ./service-helpers/pick */ \"(ssr)/./node_modules/@mapbox/mapbox-sdk/services/service-helpers/pick.js\");\nvar stringifyBooleans = __webpack_require__(/*! ./service-helpers/stringify-booleans */ \"(ssr)/./node_modules/@mapbox/mapbox-sdk/services/service-helpers/stringify-booleans.js\");\nvar createServiceFactory = __webpack_require__(/*! ./service-helpers/create-service-factory */ \"(ssr)/./node_modules/@mapbox/mapbox-sdk/services/service-helpers/create-service-factory.js\");\n\n/**\n * Geocoding API service.\n *\n * Learn more about this service and its responses in\n * [the HTTP service documentation](https://docs.mapbox.com/api/search/#geocoding).\n */\nvar Geocoding = {};\n\nvar featureTypes = [\n  'country',\n  'region',\n  'postcode',\n  'district',\n  'place',\n  'locality',\n  'neighborhood',\n  'address',\n  'poi',\n  'poi.landmark'\n];\n\n/**\n * Search for a place.\n *\n * See the [public documentation](https://docs.mapbox.com/api/search/#forward-geocoding).\n *\n * @param {Object} config\n * @param {string} config.query - A place name.\n * @param {'mapbox.places'|'mapbox.places-permanent'} [config.mode=\"mapbox.places\"] - Either `mapbox.places` for ephemeral geocoding, or `mapbox.places-permanent` for storing results and batch geocoding.\n * @param {Array<string>} [config.countries] - Limits results to the specified countries.\n *   Each item in the array should be an [ISO 3166 alpha 2 country code](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2).\n * @param {Coordinates|'ip'} [config.proximity] - Bias local results based on a provided coordinate location or a user's IP address.\n * @param {Array<'country'|'region'|'postcode'|'district'|'place'|'locality'|'neighborhood'|'address'|'poi'|'poi.landmark'>} [config.types] - Filter results by feature types.\n * @param {boolean} [config.autocomplete=true] - Return autocomplete results or not.\n * @param {BoundingBox} [config.bbox] - Limit results to a bounding box.\n * @param {number} [config.limit=5] - Limit the number of results returned.\n * @param {Array<string>} [config.language] - Specify the language to use for response text and, for forward geocoding, query result weighting.\n *  Options are [IETF language tags](https://en.wikipedia.org/wiki/IETF_language_tag) comprised of a mandatory\n *  [ISO 639-1 language code](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) and optionally one or more IETF subtags for country or script.\n * @param {boolean} [config.routing=false] - Specify whether to request additional metadata about the recommended navigation destination. Only applicable for address features.\n * @param {boolean} [config.fuzzyMatch=true] - Specify whether the Geocoding API should attempt approximate, as well as exact, matching.\n * @param {String} [config.worldview=\"us\"] - Filter results to geographic features whose characteristics are defined differently by audiences belonging to various regional, cultural, or political groups.\n * @param {String} [config.session_token] - A unique session identifier generated by the client.\n * @return {MapiRequest}\n *\n * @example\n * geocodingClient.forwardGeocode({\n *   query: 'Paris, France',\n *   limit: 2\n * })\n *   .send()\n *   .then(response => {\n *     const match = response.body;\n *   });\n *\n * @example\n * // geocoding with proximity\n * geocodingClient.forwardGeocode({\n *   query: 'Paris, France',\n *   proximity: [-95.4431142, 33.6875431]\n * })\n *   .send()\n *   .then(response => {\n *     const match = response.body;\n *   });\n *\n * // geocoding with countries\n * geocodingClient.forwardGeocode({\n *   query: 'Paris, France',\n *   countries: ['fr']\n * })\n *   .send()\n *   .then(response => {\n *     const match = response.body;\n *   });\n *\n * // geocoding with bounding box\n * geocodingClient.forwardGeocode({\n *   query: 'Paris, France',\n *   bbox: [2.14, 48.72, 2.55, 48.96]\n * })\n *   .send()\n *   .then(response => {\n *     const match = response.body;\n *   });\n */\nGeocoding.forwardGeocode = function(config) {\n  v.assertShape({\n    query: v.required(v.string),\n    mode: v.oneOf('mapbox.places', 'mapbox.places-permanent'),\n    countries: v.arrayOf(v.string),\n    proximity: v.oneOf(v.coordinates, 'ip'),\n    types: v.arrayOf(v.oneOf(featureTypes)),\n    autocomplete: v.boolean,\n    bbox: v.arrayOf(v.number),\n    limit: v.number,\n    language: v.arrayOf(v.string),\n    routing: v.boolean,\n    fuzzyMatch: v.boolean,\n    worldview: v.string,\n    session_token: v.string\n  })(config);\n\n  config.mode = config.mode || 'mapbox.places';\n\n  var query = stringifyBooleans(\n    xtend(\n      { country: config.countries },\n      pick(config, [\n        'proximity',\n        'types',\n        'autocomplete',\n        'bbox',\n        'limit',\n        'language',\n        'routing',\n        'fuzzyMatch',\n        'worldview',\n        'session_token'\n      ])\n    )\n  );\n\n  return this.client.createRequest({\n    method: 'GET',\n    path: '/geocoding/v5/:mode/:query.json',\n    params: pick(config, ['mode', 'query']),\n    query: query\n  });\n};\n\n/**\n * Search for places near coordinates.\n *\n * See the [public documentation](https://docs.mapbox.com/api/search/#reverse-geocoding).\n *\n * @param {Object} config\n * @param {Coordinates} config.query - Coordinates at which features will be searched.\n * @param {'mapbox.places'|'mapbox.places-permanent'} [config.mode=\"mapbox.places\"] - Either `mapbox.places` for ephemeral geocoding, or `mapbox.places-permanent` for storing results and batch geocoding.\n * @param {Array<string>} [config.countries] - Limits results to the specified countries.\n *   Each item in the array should be an [ISO 3166 alpha 2 country code](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2).\n * @param {Array<'country'|'region'|'postcode'|'district'|'place'|'locality'|'neighborhood'|'address'|'poi'|'poi.landmark'>} [config.types] - Filter results by feature types.\n * @param {BoundingBox} [config.bbox] - Limit results to a bounding box.\n * @param {number} [config.limit=1] - Limit the number of results returned. If using this option, you must provide a single item for `types`.\n * @param {Array<string>} [config.language] - Specify the language to use for response text and, for forward geocoding, query result weighting.\n *  Options are [IETF language tags](https://en.wikipedia.org/wiki/IETF_language_tag) comprised of a mandatory\n *  [ISO 639-1 language code](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) and optionally one or more IETF subtags for country or script.\n * @param {'distance'|'score'} [config.reverseMode='distance'] - Set the factors that are used to sort nearby results.\n * @param {boolean} [config.routing=false] - Specify whether to request additional metadata about the recommended navigation destination. Only applicable for address features.\n * @param {String} [config.worldview=\"us\"] - Filter results to geographic features whose characteristics are defined differently by audiences belonging to various regional, cultural, or political groups.\n * @param {String} [config.session_token] - A unique session identifier generated by the client.\n * @return {MapiRequest}\n *\n * @example\n * geocodingClient.reverseGeocode({\n *   query: [-95.4431142, 33.6875431]\n * })\n *   .send()\n *   .then(response => {\n *     // GeoJSON document with geocoding matches\n *     const match = response.body;\n *   });\n */\nGeocoding.reverseGeocode = function(config) {\n  v.assertShape({\n    query: v.required(v.coordinates),\n    mode: v.oneOf('mapbox.places', 'mapbox.places-permanent'),\n    countries: v.arrayOf(v.string),\n    types: v.arrayOf(v.oneOf(featureTypes)),\n    bbox: v.arrayOf(v.number),\n    limit: v.number,\n    language: v.arrayOf(v.string),\n    reverseMode: v.oneOf('distance', 'score'),\n    routing: v.boolean,\n    worldview: v.string,\n    session_token: v.string\n  })(config);\n\n  config.mode = config.mode || 'mapbox.places';\n\n  var query = stringifyBooleans(\n    xtend(\n      { country: config.countries },\n      pick(config, [\n        'country',\n        'types',\n        'bbox',\n        'limit',\n        'language',\n        'reverseMode',\n        'routing',\n        'worldview',\n        'session_token'\n      ])\n    )\n  );\n\n  return this.client.createRequest({\n    method: 'GET',\n    path: '/geocoding/v5/:mode/:query.json',\n    params: pick(config, ['mode', 'query']),\n    query: query\n  });\n};\n\nmodule.exports = createServiceFactory(Geocoding);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@mapbox/mapbox-sdk/services/geocoding.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@mapbox/mapbox-sdk/services/service-helpers/create-service-factory.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/@mapbox/mapbox-sdk/services/service-helpers/create-service-factory.js ***!
  \********************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n\nvar MapiClient = __webpack_require__(/*! ../../lib/classes/mapi-client */ \"(ssr)/./node_modules/@mapbox/mapbox-sdk/lib/classes/mapi-client.js\");\n// This will create the environment-appropriate client.\nvar createClient = __webpack_require__(/*! ../../lib/client */ \"(ssr)/./node_modules/@mapbox/mapbox-sdk/lib/client.js\");\n\nfunction createServiceFactory(ServicePrototype) {\n  return function(clientOrConfig) {\n    var client;\n    if (MapiClient.prototype.isPrototypeOf(clientOrConfig)) {\n      client = clientOrConfig;\n    } else {\n      client = createClient(clientOrConfig);\n    }\n    var service = Object.create(ServicePrototype);\n    service.client = client;\n    return service;\n  };\n}\n\nmodule.exports = createServiceFactory;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG1hcGJveC9tYXBib3gtc2RrL3NlcnZpY2VzL3NlcnZpY2UtaGVscGVycy9jcmVhdGUtc2VydmljZS1mYWN0b3J5LmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViLGlCQUFpQixtQkFBTyxDQUFDLHlHQUErQjtBQUN4RDtBQUNBLG1CQUFtQixtQkFBTyxDQUFDLCtFQUFrQjs7QUFFN0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSIsInNvdXJjZXMiOlsid2VicGFjazovL3RyYWluLWZyb250ZW5kLWN3Ly4vbm9kZV9tb2R1bGVzL0BtYXBib3gvbWFwYm94LXNkay9zZXJ2aWNlcy9zZXJ2aWNlLWhlbHBlcnMvY3JlYXRlLXNlcnZpY2UtZmFjdG9yeS5qcz9iNmFiIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxudmFyIE1hcGlDbGllbnQgPSByZXF1aXJlKCcuLi8uLi9saWIvY2xhc3Nlcy9tYXBpLWNsaWVudCcpO1xuLy8gVGhpcyB3aWxsIGNyZWF0ZSB0aGUgZW52aXJvbm1lbnQtYXBwcm9wcmlhdGUgY2xpZW50LlxudmFyIGNyZWF0ZUNsaWVudCA9IHJlcXVpcmUoJy4uLy4uL2xpYi9jbGllbnQnKTtcblxuZnVuY3Rpb24gY3JlYXRlU2VydmljZUZhY3RvcnkoU2VydmljZVByb3RvdHlwZSkge1xuICByZXR1cm4gZnVuY3Rpb24oY2xpZW50T3JDb25maWcpIHtcbiAgICB2YXIgY2xpZW50O1xuICAgIGlmIChNYXBpQ2xpZW50LnByb3RvdHlwZS5pc1Byb3RvdHlwZU9mKGNsaWVudE9yQ29uZmlnKSkge1xuICAgICAgY2xpZW50ID0gY2xpZW50T3JDb25maWc7XG4gICAgfSBlbHNlIHtcbiAgICAgIGNsaWVudCA9IGNyZWF0ZUNsaWVudChjbGllbnRPckNvbmZpZyk7XG4gICAgfVxuICAgIHZhciBzZXJ2aWNlID0gT2JqZWN0LmNyZWF0ZShTZXJ2aWNlUHJvdG90eXBlKTtcbiAgICBzZXJ2aWNlLmNsaWVudCA9IGNsaWVudDtcbiAgICByZXR1cm4gc2VydmljZTtcbiAgfTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBjcmVhdGVTZXJ2aWNlRmFjdG9yeTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@mapbox/mapbox-sdk/services/service-helpers/create-service-factory.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@mapbox/mapbox-sdk/services/service-helpers/object-map.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@mapbox/mapbox-sdk/services/service-helpers/object-map.js ***!
  \********************************************************************************/
/***/ ((module) => {

eval("\n\nfunction objectMap(obj, cb) {\n  return Object.keys(obj).reduce(function(result, key) {\n    result[key] = cb(key, obj[key]);\n    return result;\n  }, {});\n}\n\nmodule.exports = objectMap;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG1hcGJveC9tYXBib3gtc2RrL3NlcnZpY2VzL3NlcnZpY2UtaGVscGVycy9vYmplY3QtbWFwLmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRyxJQUFJO0FBQ1A7O0FBRUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly90cmFpbi1mcm9udGVuZC1jdy8uL25vZGVfbW9kdWxlcy9AbWFwYm94L21hcGJveC1zZGsvc2VydmljZXMvc2VydmljZS1oZWxwZXJzL29iamVjdC1tYXAuanM/OWQxYSJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbmZ1bmN0aW9uIG9iamVjdE1hcChvYmosIGNiKSB7XG4gIHJldHVybiBPYmplY3Qua2V5cyhvYmopLnJlZHVjZShmdW5jdGlvbihyZXN1bHQsIGtleSkge1xuICAgIHJlc3VsdFtrZXldID0gY2Ioa2V5LCBvYmpba2V5XSk7XG4gICAgcmV0dXJuIHJlc3VsdDtcbiAgfSwge30pO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IG9iamVjdE1hcDtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@mapbox/mapbox-sdk/services/service-helpers/object-map.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@mapbox/mapbox-sdk/services/service-helpers/pick.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@mapbox/mapbox-sdk/services/service-helpers/pick.js ***!
  \**************************************************************************/
/***/ ((module) => {

eval("\n\n/**\n * Create a new object by picking properties off an existing object.\n * The second param can be overloaded as a callback for\n * more fine grained picking of properties.\n * @param {Object} source\n * @param {Array<string>|function(string, Object):boolean} keys\n * @returns {Object}\n */\nfunction pick(source, keys) {\n  var filter = function(key, val) {\n    return keys.indexOf(key) !== -1 && val !== undefined;\n  };\n\n  if (typeof keys === 'function') {\n    filter = keys;\n  }\n\n  return Object.keys(source)\n    .filter(function(key) {\n      return filter(key, source[key]);\n    })\n    .reduce(function(result, key) {\n      result[key] = source[key];\n      return result;\n    }, {});\n}\n\nmodule.exports = pick;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG1hcGJveC9tYXBib3gtc2RrL3NlcnZpY2VzL3NlcnZpY2UtaGVscGVycy9waWNrLmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxRQUFRO0FBQ25CLFdBQVcsZ0RBQWdEO0FBQzNELGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0EsS0FBSyxJQUFJO0FBQ1Q7O0FBRUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly90cmFpbi1mcm9udGVuZC1jdy8uL25vZGVfbW9kdWxlcy9AbWFwYm94L21hcGJveC1zZGsvc2VydmljZXMvc2VydmljZS1oZWxwZXJzL3BpY2suanM/ODIzZSJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbi8qKlxuICogQ3JlYXRlIGEgbmV3IG9iamVjdCBieSBwaWNraW5nIHByb3BlcnRpZXMgb2ZmIGFuIGV4aXN0aW5nIG9iamVjdC5cbiAqIFRoZSBzZWNvbmQgcGFyYW0gY2FuIGJlIG92ZXJsb2FkZWQgYXMgYSBjYWxsYmFjayBmb3JcbiAqIG1vcmUgZmluZSBncmFpbmVkIHBpY2tpbmcgb2YgcHJvcGVydGllcy5cbiAqIEBwYXJhbSB7T2JqZWN0fSBzb3VyY2VcbiAqIEBwYXJhbSB7QXJyYXk8c3RyaW5nPnxmdW5jdGlvbihzdHJpbmcsIE9iamVjdCk6Ym9vbGVhbn0ga2V5c1xuICogQHJldHVybnMge09iamVjdH1cbiAqL1xuZnVuY3Rpb24gcGljayhzb3VyY2UsIGtleXMpIHtcbiAgdmFyIGZpbHRlciA9IGZ1bmN0aW9uKGtleSwgdmFsKSB7XG4gICAgcmV0dXJuIGtleXMuaW5kZXhPZihrZXkpICE9PSAtMSAmJiB2YWwgIT09IHVuZGVmaW5lZDtcbiAgfTtcblxuICBpZiAodHlwZW9mIGtleXMgPT09ICdmdW5jdGlvbicpIHtcbiAgICBmaWx0ZXIgPSBrZXlzO1xuICB9XG5cbiAgcmV0dXJuIE9iamVjdC5rZXlzKHNvdXJjZSlcbiAgICAuZmlsdGVyKGZ1bmN0aW9uKGtleSkge1xuICAgICAgcmV0dXJuIGZpbHRlcihrZXksIHNvdXJjZVtrZXldKTtcbiAgICB9KVxuICAgIC5yZWR1Y2UoZnVuY3Rpb24ocmVzdWx0LCBrZXkpIHtcbiAgICAgIHJlc3VsdFtrZXldID0gc291cmNlW2tleV07XG4gICAgICByZXR1cm4gcmVzdWx0O1xuICAgIH0sIHt9KTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBwaWNrO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@mapbox/mapbox-sdk/services/service-helpers/pick.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@mapbox/mapbox-sdk/services/service-helpers/stringify-booleans.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/@mapbox/mapbox-sdk/services/service-helpers/stringify-booleans.js ***!
  \****************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n\nvar objectMap = __webpack_require__(/*! ./object-map */ \"(ssr)/./node_modules/@mapbox/mapbox-sdk/services/service-helpers/object-map.js\");\n\n/**\n * Stringify all the boolean values in an object, so true becomes \"true\".\n *\n * @param {Object} obj\n * @returns {Object}\n */\nfunction stringifyBoolean(obj) {\n  return objectMap(obj, function(_, value) {\n    return typeof value === 'boolean' ? JSON.stringify(value) : value;\n  });\n}\n\nmodule.exports = stringifyBoolean;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG1hcGJveC9tYXBib3gtc2RrL3NlcnZpY2VzL3NlcnZpY2UtaGVscGVycy9zdHJpbmdpZnktYm9vbGVhbnMuanMiLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWIsZ0JBQWdCLG1CQUFPLENBQUMsb0dBQWM7O0FBRXRDO0FBQ0E7QUFDQTtBQUNBLFdBQVcsUUFBUTtBQUNuQixhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7O0FBRUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly90cmFpbi1mcm9udGVuZC1jdy8uL25vZGVfbW9kdWxlcy9AbWFwYm94L21hcGJveC1zZGsvc2VydmljZXMvc2VydmljZS1oZWxwZXJzL3N0cmluZ2lmeS1ib29sZWFucy5qcz9lZjQwIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxudmFyIG9iamVjdE1hcCA9IHJlcXVpcmUoJy4vb2JqZWN0LW1hcCcpO1xuXG4vKipcbiAqIFN0cmluZ2lmeSBhbGwgdGhlIGJvb2xlYW4gdmFsdWVzIGluIGFuIG9iamVjdCwgc28gdHJ1ZSBiZWNvbWVzIFwidHJ1ZVwiLlxuICpcbiAqIEBwYXJhbSB7T2JqZWN0fSBvYmpcbiAqIEByZXR1cm5zIHtPYmplY3R9XG4gKi9cbmZ1bmN0aW9uIHN0cmluZ2lmeUJvb2xlYW4ob2JqKSB7XG4gIHJldHVybiBvYmplY3RNYXAob2JqLCBmdW5jdGlvbihfLCB2YWx1ZSkge1xuICAgIHJldHVybiB0eXBlb2YgdmFsdWUgPT09ICdib29sZWFuJyA/IEpTT04uc3RyaW5naWZ5KHZhbHVlKSA6IHZhbHVlO1xuICB9KTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBzdHJpbmdpZnlCb29sZWFuO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@mapbox/mapbox-sdk/services/service-helpers/stringify-booleans.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@mapbox/mapbox-sdk/services/service-helpers/validator.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@mapbox/mapbox-sdk/services/service-helpers/validator.js ***!
  \*******************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n\nvar xtend = __webpack_require__(/*! xtend */ \"(ssr)/./node_modules/xtend/immutable.js\");\nvar v = __webpack_require__(/*! @mapbox/fusspot */ \"(ssr)/./node_modules/@mapbox/fusspot/lib/index.js\");\n\nfunction file(value) {\n  // If we're in a browser so Blob is available, the file must be that.\n  // In Node, however, it could be a filepath or a pipeable (Readable) stream.\n  if (typeof window !== 'undefined') {\n    if (value instanceof global.Blob || value instanceof global.ArrayBuffer) {\n      return;\n    }\n    return 'Blob or ArrayBuffer';\n  }\n  if (typeof value === 'string' || value.pipe !== undefined) {\n    return;\n  }\n  return 'Filename or Readable stream';\n}\n\nfunction assertShape(validatorObj, apiName) {\n  return v.assert(v.strictShape(validatorObj), apiName);\n}\n\nfunction date(value) {\n  var msg = 'date';\n  if (typeof value === 'boolean') {\n    return msg;\n  }\n  try {\n    var date = new Date(value);\n    if (date.getTime && isNaN(date.getTime())) {\n      return msg;\n    }\n  } catch (e) {\n    return msg;\n  }\n}\n\nfunction coordinates(value) {\n  return v.tuple(v.number, v.number)(value);\n}\n\nmodule.exports = xtend(v, {\n  file: file,\n  date: date,\n  coordinates: coordinates,\n  assertShape: assertShape\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG1hcGJveC9tYXBib3gtc2RrL3NlcnZpY2VzL3NlcnZpY2UtaGVscGVycy92YWxpZGF0b3IuanMiLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWIsWUFBWSxtQkFBTyxDQUFDLHNEQUFPO0FBQzNCLFFBQVEsbUJBQU8sQ0FBQywwRUFBaUI7O0FBRWpDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly90cmFpbi1mcm9udGVuZC1jdy8uL25vZGVfbW9kdWxlcy9AbWFwYm94L21hcGJveC1zZGsvc2VydmljZXMvc2VydmljZS1oZWxwZXJzL3ZhbGlkYXRvci5qcz83ZjVjIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxudmFyIHh0ZW5kID0gcmVxdWlyZSgneHRlbmQnKTtcbnZhciB2ID0gcmVxdWlyZSgnQG1hcGJveC9mdXNzcG90Jyk7XG5cbmZ1bmN0aW9uIGZpbGUodmFsdWUpIHtcbiAgLy8gSWYgd2UncmUgaW4gYSBicm93c2VyIHNvIEJsb2IgaXMgYXZhaWxhYmxlLCB0aGUgZmlsZSBtdXN0IGJlIHRoYXQuXG4gIC8vIEluIE5vZGUsIGhvd2V2ZXIsIGl0IGNvdWxkIGJlIGEgZmlsZXBhdGggb3IgYSBwaXBlYWJsZSAoUmVhZGFibGUpIHN0cmVhbS5cbiAgaWYgKHR5cGVvZiB3aW5kb3cgIT09ICd1bmRlZmluZWQnKSB7XG4gICAgaWYgKHZhbHVlIGluc3RhbmNlb2YgZ2xvYmFsLkJsb2IgfHwgdmFsdWUgaW5zdGFuY2VvZiBnbG9iYWwuQXJyYXlCdWZmZXIpIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG4gICAgcmV0dXJuICdCbG9iIG9yIEFycmF5QnVmZmVyJztcbiAgfVxuICBpZiAodHlwZW9mIHZhbHVlID09PSAnc3RyaW5nJyB8fCB2YWx1ZS5waXBlICE9PSB1bmRlZmluZWQpIHtcbiAgICByZXR1cm47XG4gIH1cbiAgcmV0dXJuICdGaWxlbmFtZSBvciBSZWFkYWJsZSBzdHJlYW0nO1xufVxuXG5mdW5jdGlvbiBhc3NlcnRTaGFwZSh2YWxpZGF0b3JPYmosIGFwaU5hbWUpIHtcbiAgcmV0dXJuIHYuYXNzZXJ0KHYuc3RyaWN0U2hhcGUodmFsaWRhdG9yT2JqKSwgYXBpTmFtZSk7XG59XG5cbmZ1bmN0aW9uIGRhdGUodmFsdWUpIHtcbiAgdmFyIG1zZyA9ICdkYXRlJztcbiAgaWYgKHR5cGVvZiB2YWx1ZSA9PT0gJ2Jvb2xlYW4nKSB7XG4gICAgcmV0dXJuIG1zZztcbiAgfVxuICB0cnkge1xuICAgIHZhciBkYXRlID0gbmV3IERhdGUodmFsdWUpO1xuICAgIGlmIChkYXRlLmdldFRpbWUgJiYgaXNOYU4oZGF0ZS5nZXRUaW1lKCkpKSB7XG4gICAgICByZXR1cm4gbXNnO1xuICAgIH1cbiAgfSBjYXRjaCAoZSkge1xuICAgIHJldHVybiBtc2c7XG4gIH1cbn1cblxuZnVuY3Rpb24gY29vcmRpbmF0ZXModmFsdWUpIHtcbiAgcmV0dXJuIHYudHVwbGUodi5udW1iZXIsIHYubnVtYmVyKSh2YWx1ZSk7XG59XG5cbm1vZHVsZS5leHBvcnRzID0geHRlbmQodiwge1xuICBmaWxlOiBmaWxlLFxuICBkYXRlOiBkYXRlLFxuICBjb29yZGluYXRlczogY29vcmRpbmF0ZXMsXG4gIGFzc2VydFNoYXBlOiBhc3NlcnRTaGFwZVxufSk7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@mapbox/mapbox-sdk/services/service-helpers/validator.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@mapbox/parse-mapbox-token/index.js":
/*!**********************************************************!*\
  !*** ./node_modules/@mapbox/parse-mapbox-token/index.js ***!
  \**********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n\nvar base64 = __webpack_require__(/*! base-64 */ \"(ssr)/./node_modules/base-64/base64.js\");\n\nvar tokenCache = {};\n\nfunction parseToken(token) {\n  if (tokenCache[token]) {\n    return tokenCache[token];\n  }\n\n  var parts = token.split('.');\n  var usage = parts[0];\n  var rawPayload = parts[1];\n  if (!rawPayload) {\n    throw new Error('Invalid token');\n  }\n\n  var parsedPayload = parsePaylod(rawPayload);\n\n  var result = {\n    usage: usage,\n    user: parsedPayload.u\n  };\n  if (has(parsedPayload, 'a')) result.authorization = parsedPayload.a;\n  if (has(parsedPayload, 'exp')) result.expires = parsedPayload.exp * 1000;\n  if (has(parsedPayload, 'iat')) result.created = parsedPayload.iat * 1000;\n  if (has(parsedPayload, 'scopes')) result.scopes = parsedPayload.scopes;\n  if (has(parsedPayload, 'client')) result.client = parsedPayload.client;\n  if (has(parsedPayload, 'll')) result.lastLogin = parsedPayload.ll;\n  if (has(parsedPayload, 'iu')) result.impersonator = parsedPayload.iu;\n\n  tokenCache[token] = result;\n  return result;\n}\n\nfunction parsePaylod(rawPayload) {\n  try {\n    return JSON.parse(base64.decode(rawPayload));\n  } catch (parseError) {\n    throw new Error('Invalid token');\n  }\n}\n\nfunction has(obj, key) {\n  return Object.prototype.hasOwnProperty.call(obj, key);\n}\n\nmodule.exports = parseToken;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG1hcGJveC9wYXJzZS1tYXBib3gtdG9rZW4vaW5kZXguanMiLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWIsYUFBYSxtQkFBTyxDQUFDLHVEQUFTOztBQUU5Qjs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly90cmFpbi1mcm9udGVuZC1jdy8uL25vZGVfbW9kdWxlcy9AbWFwYm94L3BhcnNlLW1hcGJveC10b2tlbi9pbmRleC5qcz8xMjEyIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxudmFyIGJhc2U2NCA9IHJlcXVpcmUoJ2Jhc2UtNjQnKTtcblxudmFyIHRva2VuQ2FjaGUgPSB7fTtcblxuZnVuY3Rpb24gcGFyc2VUb2tlbih0b2tlbikge1xuICBpZiAodG9rZW5DYWNoZVt0b2tlbl0pIHtcbiAgICByZXR1cm4gdG9rZW5DYWNoZVt0b2tlbl07XG4gIH1cblxuICB2YXIgcGFydHMgPSB0b2tlbi5zcGxpdCgnLicpO1xuICB2YXIgdXNhZ2UgPSBwYXJ0c1swXTtcbiAgdmFyIHJhd1BheWxvYWQgPSBwYXJ0c1sxXTtcbiAgaWYgKCFyYXdQYXlsb2FkKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKCdJbnZhbGlkIHRva2VuJyk7XG4gIH1cblxuICB2YXIgcGFyc2VkUGF5bG9hZCA9IHBhcnNlUGF5bG9kKHJhd1BheWxvYWQpO1xuXG4gIHZhciByZXN1bHQgPSB7XG4gICAgdXNhZ2U6IHVzYWdlLFxuICAgIHVzZXI6IHBhcnNlZFBheWxvYWQudVxuICB9O1xuICBpZiAoaGFzKHBhcnNlZFBheWxvYWQsICdhJykpIHJlc3VsdC5hdXRob3JpemF0aW9uID0gcGFyc2VkUGF5bG9hZC5hO1xuICBpZiAoaGFzKHBhcnNlZFBheWxvYWQsICdleHAnKSkgcmVzdWx0LmV4cGlyZXMgPSBwYXJzZWRQYXlsb2FkLmV4cCAqIDEwMDA7XG4gIGlmIChoYXMocGFyc2VkUGF5bG9hZCwgJ2lhdCcpKSByZXN1bHQuY3JlYXRlZCA9IHBhcnNlZFBheWxvYWQuaWF0ICogMTAwMDtcbiAgaWYgKGhhcyhwYXJzZWRQYXlsb2FkLCAnc2NvcGVzJykpIHJlc3VsdC5zY29wZXMgPSBwYXJzZWRQYXlsb2FkLnNjb3BlcztcbiAgaWYgKGhhcyhwYXJzZWRQYXlsb2FkLCAnY2xpZW50JykpIHJlc3VsdC5jbGllbnQgPSBwYXJzZWRQYXlsb2FkLmNsaWVudDtcbiAgaWYgKGhhcyhwYXJzZWRQYXlsb2FkLCAnbGwnKSkgcmVzdWx0Lmxhc3RMb2dpbiA9IHBhcnNlZFBheWxvYWQubGw7XG4gIGlmIChoYXMocGFyc2VkUGF5bG9hZCwgJ2l1JykpIHJlc3VsdC5pbXBlcnNvbmF0b3IgPSBwYXJzZWRQYXlsb2FkLml1O1xuXG4gIHRva2VuQ2FjaGVbdG9rZW5dID0gcmVzdWx0O1xuICByZXR1cm4gcmVzdWx0O1xufVxuXG5mdW5jdGlvbiBwYXJzZVBheWxvZChyYXdQYXlsb2FkKSB7XG4gIHRyeSB7XG4gICAgcmV0dXJuIEpTT04ucGFyc2UoYmFzZTY0LmRlY29kZShyYXdQYXlsb2FkKSk7XG4gIH0gY2F0Y2ggKHBhcnNlRXJyb3IpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoJ0ludmFsaWQgdG9rZW4nKTtcbiAgfVxufVxuXG5mdW5jdGlvbiBoYXMob2JqLCBrZXkpIHtcbiAgcmV0dXJuIE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChvYmosIGtleSk7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gcGFyc2VUb2tlbjtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@mapbox/parse-mapbox-token/index.js\n");

/***/ })

};
;